{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MAS Support","title":"Welcome to MAS Support"},{"location":"#welcome-to-mas-support","text":"","title":"Welcome to MAS Support"},{"location":"spatial/","text":"Spatial Guide section 1 ...","title":"Mobile"},{"location":"spatial/#spatial-guide","text":"","title":"Spatial Guide"},{"location":"spatial/#section-1","text":"","title":"section 1 ..."},{"location":"airgap/00-airgapsteps/","text":"Installing MAS in an Airgap environment Introduction The aim of this document is to present an installation of MAS in an airgapped environment, an environment that has no or limited connection to the Internet. In such environment, container images are served by a private image registry. Therefore, before the install can take place, you have to prepare a private image registry, then mirror the images that will bee needed to run OCP and for the installation MAS and applications and its dependencies. Setup image registry For setting up the image registry you have to consider the disk space required to host all the images. to get an idea of how much storage is required, you can refer to: https://ibm-mas.github.io/cli/guides/image-mirroring/#storage-requirements https://ibm-mas.github.io/cli/commands/mirror-redhat-images/#storage-requirements Overview setup image registry miror images configure OCP install MAS The MAS cli has commands to execute those steps, it can be run interactively or not.","title":"Overview"},{"location":"airgap/00-airgapsteps/#installing-mas-in-an-airgap-environment","text":"","title":"Installing MAS in an Airgap environment"},{"location":"airgap/00-airgapsteps/#introduction","text":"The aim of this document is to present an installation of MAS in an airgapped environment, an environment that has no or limited connection to the Internet. In such environment, container images are served by a private image registry. Therefore, before the install can take place, you have to prepare a private image registry, then mirror the images that will bee needed to run OCP and for the installation MAS and applications and its dependencies.","title":"Introduction"},{"location":"airgap/00-airgapsteps/#setup-image-registry","text":"For setting up the image registry you have to consider the disk space required to host all the images. to get an idea of how much storage is required, you can refer to: https://ibm-mas.github.io/cli/guides/image-mirroring/#storage-requirements https://ibm-mas.github.io/cli/commands/mirror-redhat-images/#storage-requirements","title":"Setup image registry"},{"location":"airgap/00-airgapsteps/#overview","text":"setup image registry miror images configure OCP install MAS The MAS cli has commands to execute those steps, it can be run interactively or not.","title":"Overview"},{"location":"airgap/01-airgap_podmancommands/","text":"usefull podman commands list all containers: podman ps -a 40e0838dfc67 quay.io/ibmmas/cli:latest /bin/sh -c bash 2 weeks ago Exited (0) 2 weeks ago lucid_shtern 8c2596403ff2 quay.io/ibmmas/cli:latest /bin/sh -c bash 2 weeks ago Exited (0) 2 weeks ago relaxed_brahmagupta b9ecb6fb2d61 quay.io/ibmmas/cli:7.8.0 /bin/sh -c bash 2 weeks ago Exited (0) 2 weeks ago adoring_khayyam ee3efa6fa401 quay.io/ibmmas/cli:latest /bin/sh -c bash 2 weeks ago Exited (0) 2 weeks ago trusting_bouman f49ddbb4c603 quay.io/ibmmas/cli:7.8.0 /bin/sh -c bash 2 weeks ago Exited (129) 13 days ago busy_bhabha delete containers: podman rm 40e0838dfc67 8c2596403ff2 b9ecb6fb2d61 ee3efa6fa401 f49ddbb4c603 list images: podman images REPOSITORY TAG IMAGE ID CREATED SIZE quay.io/ibmmas/cli 7.8.0 72910fc0b9c0 2 weeks ago 2.71 GB quay.io/ibmmas/cli latest a246db052142 3 months ago 2.6 GB docker.io/library/registry latest 0030ba3d620c 4 months ago 24.6 MB delete images: podman rmi 72910fc0b9c0 Untagged: quay.io/ibmmas/cli:7.8.0 Deleted: 72910fc0b9c031cae7124e89e925589e8d5ceba54c6078c7ae9e7db701399363 start the cli image: podman run -ti -d -v -name mascli /images:/images:z -v ~:/mnt/home:z --pull always quay.io/ibmmas/cli NOTE: before installing, copy the license file to one of the mounted folders on the host. connect to a running container: podman exec -ti mascli /bin/bash stop and start container: podman stop mascli podman start mascli","title":"Containers"},{"location":"airgap/01-airgap_podmancommands/#usefull-podman-commands","text":"list all containers: podman ps -a 40e0838dfc67 quay.io/ibmmas/cli:latest /bin/sh -c bash 2 weeks ago Exited (0) 2 weeks ago lucid_shtern 8c2596403ff2 quay.io/ibmmas/cli:latest /bin/sh -c bash 2 weeks ago Exited (0) 2 weeks ago relaxed_brahmagupta b9ecb6fb2d61 quay.io/ibmmas/cli:7.8.0 /bin/sh -c bash 2 weeks ago Exited (0) 2 weeks ago adoring_khayyam ee3efa6fa401 quay.io/ibmmas/cli:latest /bin/sh -c bash 2 weeks ago Exited (0) 2 weeks ago trusting_bouman f49ddbb4c603 quay.io/ibmmas/cli:7.8.0 /bin/sh -c bash 2 weeks ago Exited (129) 13 days ago busy_bhabha delete containers: podman rm 40e0838dfc67 8c2596403ff2 b9ecb6fb2d61 ee3efa6fa401 f49ddbb4c603 list images: podman images REPOSITORY TAG IMAGE ID CREATED SIZE quay.io/ibmmas/cli 7.8.0 72910fc0b9c0 2 weeks ago 2.71 GB quay.io/ibmmas/cli latest a246db052142 3 months ago 2.6 GB docker.io/library/registry latest 0030ba3d620c 4 months ago 24.6 MB delete images: podman rmi 72910fc0b9c0 Untagged: quay.io/ibmmas/cli:7.8.0 Deleted: 72910fc0b9c031cae7124e89e925589e8d5ceba54c6078c7ae9e7db701399363 start the cli image: podman run -ti -d -v -name mascli /images:/images:z -v ~:/mnt/home:z --pull always quay.io/ibmmas/cli NOTE: before installing, copy the license file to one of the mounted folders on the host. connect to a running container: podman exec -ti mascli /bin/bash stop and start container: podman stop mascli podman start mascli","title":"usefull podman commands"},{"location":"airgap/05-vm_extend_disk/","text":"prepare VM Deploy VM deploy a Redhat 8 image on Fyre. when deployed, extend disk via EDIT EMBER menu in fyre.ibm.com/stacks set the new size of the disk and submit. repeat until you have the size you need. Extend disk open a shell session as root. List block devices: lsblk NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT sr0 11:0 1 1024M 0 rom vda 252:0 0 1.2T 0 disk vda above reflects newly added space,1.2 TB in this case. Create a new partition using fdisk, the use the interactive options: fdisk /dev/vda Command (m for help): p Disk /dev/vda: 1.2 TiB, 1288490188800 bytes, 2516582400 sectors \u2026 \u2026 Feedback Command (m for help): new <all defaults> Created a new partition 3 of type \u2018Linux\u2019 and of size 950 GiB. Command (m for help): t Partition number (1-3, default 3):Hex code (type L to list all codes): 8e Changed type of partition \u2018Linux\u2019 to \u2018Linux LVM\u2019. Command (m for help): w The partition table has been altered. Syncing disks, you can verify with: fdisk -l /dev/vda sync;reboot lsblk list the physical volumes pvdisplay create a new physical volume pvcreate /dev/vda3 list the volume groups vgdisplay extend the volme group vgextend rhel /dev/vda3 list the logical volumes lvdisplay extend the logical volume lvextend -l+100%FREE /dev/rhel/root expand the XFS filesystem xfs_growfs / verify the file system space usage df -h","title":"Deploy the VM and extend disk"},{"location":"airgap/05-vm_extend_disk/#prepare-vm","text":"","title":"prepare VM"},{"location":"airgap/05-vm_extend_disk/#deploy-vm","text":"deploy a Redhat 8 image on Fyre. when deployed, extend disk via EDIT EMBER menu in fyre.ibm.com/stacks set the new size of the disk and submit. repeat until you have the size you need.","title":"Deploy VM"},{"location":"airgap/05-vm_extend_disk/#extend-disk","text":"open a shell session as root. List block devices: lsblk NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT sr0 11:0 1 1024M 0 rom vda 252:0 0 1.2T 0 disk vda above reflects newly added space,1.2 TB in this case. Create a new partition using fdisk, the use the interactive options: fdisk /dev/vda Command (m for help): p Disk /dev/vda: 1.2 TiB, 1288490188800 bytes, 2516582400 sectors \u2026 \u2026 Feedback Command (m for help): new <all defaults> Created a new partition 3 of type \u2018Linux\u2019 and of size 950 GiB. Command (m for help): t Partition number (1-3, default 3):Hex code (type L to list all codes): 8e Changed type of partition \u2018Linux\u2019 to \u2018Linux LVM\u2019. Command (m for help): w The partition table has been altered. Syncing disks, you can verify with: fdisk -l /dev/vda sync;reboot lsblk list the physical volumes pvdisplay create a new physical volume pvcreate /dev/vda3 list the volume groups vgdisplay extend the volme group vgextend rhel /dev/vda3 list the logical volumes lvdisplay extend the logical volume lvextend -l+100%FREE /dev/rhel/root expand the XFS filesystem xfs_growfs / verify the file system space usage df -h","title":"Extend disk"},{"location":"airgap/10-airgap_deployregistry_vm/","text":"Deploy registry to a vm Install Podman and httpd-tools Install the podman package to run the registry. The httpd-tools package provides the htpasswd utility for authentication. yum install -y podman httpd-tools Create folders for the registry The registry will be stored in /images/ on the host system and the respective directories are mounted in the container running the registry. mkdir -p /images/{auth,certs,data} Generate credentials for accessing the registry Use the htpasswd utility to generate a file containing the credentials for accessing the registry: htpasswd -bBc /images/auth/htpasswd admin redhat A Bcrypt Htpasswd file named htpasswd will be created in the /images/auth/ directory. Generate TLS key pair The registry is secured with TLS by using a key and certificate signed by a trusted authority (internal or external) or by a simple self-signed certificate. To use a self-signed certificate: cd /images/certs/ REGISTRY_HOST=img-registry1.fyre.ibm.com openssl genrsa -out ca.key 2048 openssl req -new -x509 -days 365 -key ca.key -subj \"/C=NL/ST=NH/L=AMS/O=IBM-SUPPORT/CN=Acme Root CA\" -out ca.crt openssl req -newkey rsa:2048 -nodes -keyout server.key -subj \"/C=NL/ST=NH/L=AMS/O=IBM-SUPPORT/CN=$REGISTRY_HOST\" -out server.csr openssl x509 -req -extfile <(printf \"subjectAltName=DNS:$REGISTRY_HOST\") -days 3650 -in server.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out server.crt Copy the certificates # cp /images/certs/server.crt /etc/pki/ca-trust/source/anchors/ cp /images/certs/ca.crt /etc/pki/ca-trust/source/anchors/ update-ca-trust trust list | grep -i \"$REGISTRY_HOST\" Start the registy pod: podman run --name myregistry \\ -p 5000:5000 \\ -v /images/data:/var/lib/registry:z \\ -v /images/auth:/auth:z \\ -e \"REGISTRY_AUTH=htpasswd\" \\ -e \"REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm\" \\ -e REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd \\ -v /images/certs:/certs:z \\ -e \"REGISTRY_HTTP_TLS_CERTIFICATE=/certs/server.crt\" \\ -e \"REGISTRY_HTTP_TLS_KEY=/certs/server.key\" \\ -e REGISTRY_COMPATIBILITY_SCHEMA1_ENABLED=true \\ -e REGISTRY_STORAGE_DELETE_ENABLED=true \\ -d \\ docker.io/library/registry:latest Note: If a firewall is running on the hosts, the exposed port (5000) will need to be permitted. To open the port: firewall-cmd --add-port=5000/tcp --zone=internal --permanent firewall-cmd --add-port=5000/tcp --zone=public --permanent firewall-cmd --reload verify you can access the registry: curl https://admin:redhat@$REGISTRY_HOST:5000/v2/_catalog Troubleshooting 1- The certificate can be verified using: $ openssl s_client -connect <servername>:5000 -servername <servername> Be sure to trust the certificate from earlier or use curl's -k switch to ignore certificate verification. 2- Check that the registry pod is running: podman ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES cf0c6c8397d7 docker.io/library/registry:latest /etc/docker/regis... 3 months ago Up 2 weeks 0.0.0.0:5000->5000/tcp myregistry 3- When running the podman pull command you may get: Trying to pull docker.io/library/registry:latest... WARN[0038] Failed, retrying in 1s ... (1/3). Error: copying system image from manifest list: determining manifest MIME type for docker://registry:latest: reading manifest sha256:46faa9a1ae6813194b53921a370f2f4f8c5e1aae228a89bceafef5847a6a3278 in docker.io/library/registry: toomanyrequests: You have reached your unauthenticated pull rate limit. https://www.docker.com/increase-rate-limit if that is the case, login to docker.io: podman login docker.io References: https://www.redhat.com/sysadmin/simple-container-registry https://docs.docker.com/docker-hub/usage/","title":"Deploy image registry in VM"},{"location":"airgap/10-airgap_deployregistry_vm/#deploy-registry-to-a-vm","text":"","title":"Deploy registry to a vm"},{"location":"airgap/10-airgap_deployregistry_vm/#install-podman-and-httpd-tools","text":"Install the podman package to run the registry. The httpd-tools package provides the htpasswd utility for authentication. yum install -y podman httpd-tools","title":"Install Podman and httpd-tools"},{"location":"airgap/10-airgap_deployregistry_vm/#create-folders-for-the-registry","text":"The registry will be stored in /images/ on the host system and the respective directories are mounted in the container running the registry. mkdir -p /images/{auth,certs,data}","title":"Create folders for the registry"},{"location":"airgap/10-airgap_deployregistry_vm/#generate-credentials-for-accessing-the-registry","text":"Use the htpasswd utility to generate a file containing the credentials for accessing the registry: htpasswd -bBc /images/auth/htpasswd admin redhat A Bcrypt Htpasswd file named htpasswd will be created in the /images/auth/ directory.","title":"Generate credentials for accessing the registry"},{"location":"airgap/10-airgap_deployregistry_vm/#generate-tls-key-pair","text":"The registry is secured with TLS by using a key and certificate signed by a trusted authority (internal or external) or by a simple self-signed certificate. To use a self-signed certificate: cd /images/certs/ REGISTRY_HOST=img-registry1.fyre.ibm.com openssl genrsa -out ca.key 2048 openssl req -new -x509 -days 365 -key ca.key -subj \"/C=NL/ST=NH/L=AMS/O=IBM-SUPPORT/CN=Acme Root CA\" -out ca.crt openssl req -newkey rsa:2048 -nodes -keyout server.key -subj \"/C=NL/ST=NH/L=AMS/O=IBM-SUPPORT/CN=$REGISTRY_HOST\" -out server.csr openssl x509 -req -extfile <(printf \"subjectAltName=DNS:$REGISTRY_HOST\") -days 3650 -in server.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out server.crt","title":"Generate TLS key pair"},{"location":"airgap/10-airgap_deployregistry_vm/#copy-the-certificates","text":"# cp /images/certs/server.crt /etc/pki/ca-trust/source/anchors/ cp /images/certs/ca.crt /etc/pki/ca-trust/source/anchors/ update-ca-trust trust list | grep -i \"$REGISTRY_HOST\"","title":"Copy the certificates"},{"location":"airgap/10-airgap_deployregistry_vm/#start-the-registy-pod","text":"podman run --name myregistry \\ -p 5000:5000 \\ -v /images/data:/var/lib/registry:z \\ -v /images/auth:/auth:z \\ -e \"REGISTRY_AUTH=htpasswd\" \\ -e \"REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm\" \\ -e REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd \\ -v /images/certs:/certs:z \\ -e \"REGISTRY_HTTP_TLS_CERTIFICATE=/certs/server.crt\" \\ -e \"REGISTRY_HTTP_TLS_KEY=/certs/server.key\" \\ -e REGISTRY_COMPATIBILITY_SCHEMA1_ENABLED=true \\ -e REGISTRY_STORAGE_DELETE_ENABLED=true \\ -d \\ docker.io/library/registry:latest Note: If a firewall is running on the hosts, the exposed port (5000) will need to be permitted. To open the port: firewall-cmd --add-port=5000/tcp --zone=internal --permanent firewall-cmd --add-port=5000/tcp --zone=public --permanent firewall-cmd --reload verify you can access the registry: curl https://admin:redhat@$REGISTRY_HOST:5000/v2/_catalog","title":"Start the registy pod:"},{"location":"airgap/10-airgap_deployregistry_vm/#troubleshooting","text":"1- The certificate can be verified using: $ openssl s_client -connect <servername>:5000 -servername <servername> Be sure to trust the certificate from earlier or use curl's -k switch to ignore certificate verification. 2- Check that the registry pod is running: podman ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES cf0c6c8397d7 docker.io/library/registry:latest /etc/docker/regis... 3 months ago Up 2 weeks 0.0.0.0:5000->5000/tcp myregistry 3- When running the podman pull command you may get: Trying to pull docker.io/library/registry:latest... WARN[0038] Failed, retrying in 1s ... (1/3). Error: copying system image from manifest list: determining manifest MIME type for docker://registry:latest: reading manifest sha256:46faa9a1ae6813194b53921a370f2f4f8c5e1aae228a89bceafef5847a6a3278 in docker.io/library/registry: toomanyrequests: You have reached your unauthenticated pull rate limit. https://www.docker.com/increase-rate-limit if that is the case, login to docker.io: podman login docker.io","title":"Troubleshooting"},{"location":"airgap/10-airgap_deployregistry_vm/#references","text":"https://www.redhat.com/sysadmin/simple-container-registry https://docs.docker.com/docker-hub/usage/","title":"References:"},{"location":"airgap/11-airgap_deployregistry_ocp/","text":"Deploy registry to OCP Use the mas cli to create the registry you can use the mas cli setup-registry to deploy an image registry in your OCP cluster. the advantage is that it is simple to deploy the image registry, the iconvenient is that if you cluster is discarded, you loose your images and you will have to mirror all the images again when you make a new airgap install. [ibmmas/cli:4.1.3]mascli$ mas setup-registry IBM Maximo Application Suite Air Gap Registry Setup Powered by https://github.com/ibm-mas/ansible-devops/ Current Limitations 1. This is still a work in progress 1. Set Target OpenShift Cluster Connected to OCP cluster: https://console-openshift-console.apps.siccing.cp.fyre.ibm.com Proceed with this cluster? [Y/n] y 2. Configure Installation Registry Namespace > airgap-registry Registry Storage Class > rook-cephfs Registry Storage Capacity > 300Gi Registry Service Type > loadbalancer 3. Configure Authentication Mirror Registry Username > admin Mirror Registry Password > redhat Proceed with these settings [y/N] y \"Registry Hostname ...................... apps.siccing.cp.fyre.ibm.com\", \"registry Port .......................... 32500\", \"Registry Username ...................... admin\", \"Registry Password ...................... redhat\", \"Registry CA certificate ................ /tmp/apps.siccing.cp.fyre.ibm.com:32500/ca.crt\", \" Install the certificate:\", \" mv \\\"/tmp/apps.siccing.cp.fyre.ibm.com:32500\\\" \\\"/etc/docker/certs.d/apps.siccing.cp.fyre.ibm.com:32500\\\"\", \"Login Command .......................... docker login apps.siccing.cp.fyre.ibm.com:32500\" in later step, you will need the ca certificate of the registry, you can obtain it from the airgap-registry-ca secret: oc extract secret/airgap-registry-ca -n airgap-registry create route for registry: create a yaml file: apiVersion: route.openshift.io/v1 kind: Route metadata: name: registry namespace: airgap-registry spec: host: registry.apps.siccing.cp.fyre.ibm.com port: targetPort: 5000 tls: termination: passthrough to: kind: Service name: airgap-registry-lb weight: 100 wildcardPolicy: None use oc to create the route: oc create -f registry-route.yaml References https://github.com/ibm-mas/ansible-devops/tree/master/ibm/mas_devops/roles/registry https://ibm-mas.github.io/cli/commands/setup-registry/ https://github.com/ibm-mas/cli/blob/master/image/cli/mascli/functions/setup_registry","title":"Deploy registry in OCP"},{"location":"airgap/11-airgap_deployregistry_ocp/#deploy-registry-to-ocp","text":"","title":"Deploy registry to OCP"},{"location":"airgap/11-airgap_deployregistry_ocp/#use-the-mas-cli-to-create-the-registry","text":"you can use the mas cli setup-registry to deploy an image registry in your OCP cluster. the advantage is that it is simple to deploy the image registry, the iconvenient is that if you cluster is discarded, you loose your images and you will have to mirror all the images again when you make a new airgap install. [ibmmas/cli:4.1.3]mascli$ mas setup-registry IBM Maximo Application Suite Air Gap Registry Setup Powered by https://github.com/ibm-mas/ansible-devops/ Current Limitations 1. This is still a work in progress 1. Set Target OpenShift Cluster Connected to OCP cluster: https://console-openshift-console.apps.siccing.cp.fyre.ibm.com Proceed with this cluster? [Y/n] y 2. Configure Installation Registry Namespace > airgap-registry Registry Storage Class > rook-cephfs Registry Storage Capacity > 300Gi Registry Service Type > loadbalancer 3. Configure Authentication Mirror Registry Username > admin Mirror Registry Password > redhat Proceed with these settings [y/N] y \"Registry Hostname ...................... apps.siccing.cp.fyre.ibm.com\", \"registry Port .......................... 32500\", \"Registry Username ...................... admin\", \"Registry Password ...................... redhat\", \"Registry CA certificate ................ /tmp/apps.siccing.cp.fyre.ibm.com:32500/ca.crt\", \" Install the certificate:\", \" mv \\\"/tmp/apps.siccing.cp.fyre.ibm.com:32500\\\" \\\"/etc/docker/certs.d/apps.siccing.cp.fyre.ibm.com:32500\\\"\", \"Login Command .......................... docker login apps.siccing.cp.fyre.ibm.com:32500\" in later step, you will need the ca certificate of the registry, you can obtain it from the airgap-registry-ca secret: oc extract secret/airgap-registry-ca -n airgap-registry","title":"Use the mas cli to create the registry"},{"location":"airgap/11-airgap_deployregistry_ocp/#create-route-for-registry","text":"create a yaml file: apiVersion: route.openshift.io/v1 kind: Route metadata: name: registry namespace: airgap-registry spec: host: registry.apps.siccing.cp.fyre.ibm.com port: targetPort: 5000 tls: termination: passthrough to: kind: Service name: airgap-registry-lb weight: 100 wildcardPolicy: None use oc to create the route: oc create -f registry-route.yaml","title":"create route for registry:"},{"location":"airgap/11-airgap_deployregistry_ocp/#references","text":"https://github.com/ibm-mas/ansible-devops/tree/master/ibm/mas_devops/roles/registry https://ibm-mas.github.io/cli/commands/setup-registry/ https://github.com/ibm-mas/cli/blob/master/image/cli/mascli/functions/setup_registry","title":"References"},{"location":"airgap/20-airgap_mirorimages/","text":"Mirror MAS and dependencies images Use the mas cli to mirror the images: Interactive mode [ibmmas/cli:13.16.0]mascli$ mas mirror-images IBM Maximo Application Suite Air Gap Image Mirror (v13.16.0) Powered by https://github.com/ibm-mas/ansible-devops/ 1) Configure Catalog Version (see https://ibm-mas.github.io/cli/catalogs/ for details on catalogs) MAS Catalog Version > v9-250306-amd64 MAS Channel > 9.0.X 2) Configure Mirror Mode Working Directory > /images Mirror Mode: 1. Direct 2. To filesystem 3. From filesystem Select Mirror Mode > 1 3) Configure Target Mirror Mirror Registry Host > img-registry1.fyre.ibm.com Mirror Registry Port > 5000 Mirror Registry Prefix > 4) Configure Authentication Mirror Registry Username > admin Re-use saved registry password? [Y/n] 5) Configure Images to Mirror Mirror all MAS images (with dependencies) [y/N] IBM Maximo Operator Catalog [Y/n] IBM Maximo Application Suite - Core [Y/n] n IBM Maximo Application Suite - Assist [y/N] IBM Maximo Application Suite - IoT [y/N] IBM Maximo Application Suite - Manage [y/N] IBM Maximo Application Suite - Monitor [y/N] IBM Maximo Application Suite - Optimizer [y/N] IBM Maximo Application Suite - Predict [y/N] IBM Maximo Application Suite - Visual Inspection [y/N] IBM Foundational Services [Y/n] n IBM Suite License Service [Y/n] n IBM Truststore Manager [Y/n] n MongoDb Community Edition [Y/n] n IBM Db2 [Y/n] n IBM Cloud Pak for Data (CP4D) [y/N] n IBM Watson Studio Local [y/N] IBM Watson Machine Learning [y/N] IBM Analytics Engine (Spark) [y/N] IBM Cognos Analytics [y/N] IBM AppConnect [y/N] Red Hat ODF [y/N] 6) Configure Authentication Re-use saved IBM Entitlement Key? [Y/n] 7) Review Settings Settings Mirror Mode ......................... direct Working Directory ................... /images Target Registry ..................... img-registry1.fyre.ibm.com:5000 IBM Operator Catalog Catalog Version ..................... v9-250306-amd64 MAS Update Channel .................. 9.0.X Content Selection (Core Platform) IBM Maximo Operator Catalog ......... Mirror IBM Maximo Application Suite Core ... Skip Content Selection (Applications) IBM Maximo Assist ................... Skip IBM Maximo IoT ...................... Skip IBM Maximo Manage ................... Skip + IBM Maximo IT ..................... Skip IBM Maximo Monitor .................. Skip IBM Maximo Predict .................. Skip IBM Maximo Optimizer ................ Skip IBM Maximo Visual Inspection ........ Skip Content Selection (Cloud Pak for Data) IBM Cloud Pak for Data (CP4D) ....... Skip IBM Watson Studio ................... Skip IBM Watson Machine Learning ......... Skip IBM Analytics Engine (Spark)......... Skip IBM Cognos Analytics ................ Skip Content Selection (Other Dependencies) IBM Cloud Pak Foundation Services ... Skip IBM Suite License Service ........... Skip IBM Truststore Manager .............. Skip MongoDb Community Edition ........... Skip + Version 4 ......................... Skip + Version 5 ......................... Skip + Version 6 ......................... Skip + Version 7 ......................... Skip IBM Db2 ............................. Skip IBM AppConnect ...................... Skip RedHat ODF .......................... Skip Proceed with these settings [y/N] y 8) Run Mirror Process [SKIPPED] IBM Maximo Application Suite Core [SKIPPED] IBM Maximo Assist [SKIPPED] IBM Maximo IoT [SKIPPED] IBM Maximo Manage [SKIPPED] IBM Maximo Monitor [SKIPPED] IBM Maximo Predict [SKIPPED] IBM Maximo Optimizer [SKIPPED] IBM Maximo Visual Inspection [SUCCESS] Selected Dependencies: /images/logs/mirror-20250430-132211-dependencies.log in the interactive command you have to provide the various options, like the catalog version, the subscription, the private registry details, the working folder, the mirror mode and authentication for the registry. Non-Interactive Mode for the non-interactive options you can refer to the help: [ibmmas/cli:13.24.0]mascli$ mas mirror-images -h IBM Maximo Application Suite Air Gap Image Mirror (v13.24.0) Powered by https://github.com/ibm-mas/ansible-devops/ Usage: mas mirror-images [options] Where specified each option may also be defined by setting the appropriate environment variable. When no options are specified on the command line, interactive-mode will be enabled by default. Mirror Mode (Required): -m, --mode MIRROR_MODE Operation mode (direct, to-filesystem, from-filesystem) -d, --dir MIRROR_WORKING_DIR Working directory for the mirror process Registry Details (Required): -H, --host REGISTRY_PUBLIC_HOST Hostname of the target registry -P, --port REGISTRY_PUBLIC_PORT Port number for the target registry -u, --username REGISTRY_USERNAME Username to authenticate to the target registry -p, --password REGISTRY_PASSWORD Password to authenticate to the target registry Registry Prefix (Optional): -x, --prefix REGISTRY_PREFIX Prefix for the mirror image Source Registry Entitlements (Required based on what content you choose to mirror): --ibm-entitlement IBM_ENTITLEMENT_KEY IBM Entitlement Key --artifactory-username ARTIFACTORY_USERNAME Artifactory Username --artifactory-token ARTIFACTORY_TOKEN Artifactory Token Maximo Operator Catalog Selection (Optional): -c, --catalog MAS_CATALOG_VERSION Maximo Operator Catalog Version to mirror (e.g. v9-240625-amd64) -C, --channel MAS_CHANNEL Maximo Application Suite Channel to mirror (e.g. 9.0.x) Content Selection (Core Platform): --mirror-catalog Mirror the IBM Maximo Operator Catalog --mirror-core Mirror images for IBM Maximo Application Suite Core Content Selection (Applications): --mirror-assist Mirror images for IBM Maximo Assist --mirror-iot Mirror images for IBM Maximo IoT --mirror-manage Mirror images for IBM Maximo Manage --mirror-icd Mirror image for IBM Maximo IT (Separately entitled IBM Maximo Manage extension) --mirror-monitor Mirror images for IBM Maximo Monitor --mirror-optimizer Mirror images for IBM Maximo Optimizer --mirror-predict Mirror images for IBM Maximo Predict --mirror-visualinspection Mirror images for IBM Maximo Visual Inspection Content Selection (Cloud Pak for Data): --mirror-cp4d Mirror images for IBM Cloud Pak for Data Platform --mirror-wsl Mirror images for IBM Watson Studio Local --mirror-wml Mirror images for IBM Watson Machine Learning --mirror-spark Mirror images for IBM Analytics Engine (Spark) --mirror-cognos Mirror images for IBM Cognos Analytics Content Selection (Other Dependencies): --mirror-cfs Mirror images for IBM Cloud Pak Foundation Services --mirror-sls Mirror images for IBM Suite License Service --mirror-tsm Mirror images for IBM Truststore Manager --mirror-mongo Mirror images for MongoDb Community Edition --mirror-mongo-v5 Mirror images for MongoDb Community Edition version 5 --mirror-mongo-v6 Mirror images for MongoDb Community Edition version 6 --mirror-mongo-v7 Mirror images for MongoDb Community Edition version 7 --mirror-db2 Mirror images for IBM Db2 --mirror-appconnect Mirror images for IBM AppConnect --mirror-odf Mirror images for ODF Content Selection (All images included): --mirror-everything Mirror all MAS related images (including dependencies) Other Commands: --no-confirm Mirror images without prompting for confirmation -h, --help Show this help message and to the following example: https://ibm-mas.github.io/cli/examples/mirror-db2/ Troubleshotting if there are error, you can see them in the log file, you get the link at the end of the run. in the log file you see the details of the ansible playbook executed. In this example the playbook executed was mirror_core you can find more details about the command here: https://github.com/ibm-mas/cli/blob/master/image/cli/mascli/functions/mirror_images the playbook executed: https://github.com/ibm-mas/ansible-devops/blob/master/ibm/mas_devops/playbooks/mirror_dependencies.yml for the other playbooks, you can refer to the code for the mirror_images command, for example: mirror_one_thing $MIRROR_MAS_CORE \"IBM Maximo Application Suite Core\" \"$LOG_PREFIX-core.log\" mirror_core mirror_one_thing $MIRROR_MAS_ASSIST \"IBM Maximo Assist\" \"$LOG_PREFIX-assist.log\" mirror_add_assist mirror_one_thing $MIRROR_MAS_IOT \"IBM Maximo IoT\" \"$LOG_PREFIX-iot.log\" mirror_add_iot mirror_one_thing $MIRROR_MAS_MANAGE \"IBM Maximo Manage\" \"$LOG_PREFIX-manage.log\" mirror_add_manage mirror_one_thing $MIRROR_MAS_MONITOR \"IBM Maximo Monitor\" \"$LOG_PREFIX-monitor.log\" mirror_add_monitor mirror_one_thing $MIRROR_MAS_PREDICT \"IBM Maximo Predict\" \"$LOG_PREFIX-predict.log\" mirror_add_predict mirror_one_thing $MIRROR_MAS_OPTIMIZER \"IBM Maximo Optimizer\" \"$LOG_PREFIX-optimizer.log\" mirror_add_optimizer mirror_one_thing $MIRROR_MAS_VISUALINSPECTION \"IBM Maximo Visual Inspection\" \"$LOG_PREFIX-visualinspection.log\" mirror_add_visualinspection mirror_one_thing $MIRROR_DEPS \"Selected Dependencies\" \"$LOG_PREFIX-dependencies.log\" mirror_dependencies Details of mirrored images in the working directory, you will also find a manifest folder, where you will have the details of the images to be mirrored, based on the mirror type, direct, to-filesystem, from-filesystem Verify the content of the registry: verify content of catalog: curl https://registry.apps.siccing.cp.fyre.ibm.com:443/v2/_catalog -k -u admin Errors possible errors in the mirror logs: - 'error: unable to retrieve source image registry.redhat.io/rhel8/postgresql-12 manifest sha256:fa920188f567e51d75aacd723f0964026e42ac060fed392036e8d4b3c7a8129f: Get \"https://registry.redhat.io/v2/rhel8/postgresql-12/manifests/sha256:fa920188f567e51d75aacd723f0964026e42ac060fed392036e8d4b3c7a8129f\": unauthorized: Please login to the Red Hat Registry using your Customer Portal credentials. Further instructions can be found here: https://access.redhat.com/articles/3399531' - 'error: unable to retrieve source image registry.redhat.io/ubi8/nodejs-14 manifest sha256:881e871f845b9395f5e21cfa45f0d1838dc9af60c4f18ece67bd56a9e44846cc: Get \"https://registry.redhat.io/v2/ubi8/nodejs-14/manifests/sha256:881e871f845b9395f5e21cfa45f0d1838dc9af60c4f18ece67bd56a9e44846cc\": unauthorized: Please login to the Red Hat Registry using your Customer Portal credentials. Further instructions can be found here: https://access.redhat.com/articles/3399531' - 'error: an error occurred during planning' check your credentials for the RedHat Registry and check that you are able to pull that image: podman login registry.redhat.io podman pull registry.redhat.io/rhel8/postgresql-12 - 'error: unable to upload blob sha256:e74f44e4f683243a0446e47de088c9c8a1c55278bd3a0526e9e63c5f00000383 to image-registry1.fyre.ibm.com:5000/cp/mas/coreidp-login: received unexpected HTTP status: 500 Internal Server Error' - 'error: unable to upload blob sha256:f391635980289b620e6da853245581ec547fb5028be82822ae4046a7a301cf76 to image-registry1.fyre.ibm.com:5000/cp/mas/coreidp-login: received unexpected HTTP status: 500 Internal Server Error' - 'info: Mirroring completed in 1m37.83s (15.1MB/s)' - 'error: one or more errors occurred while uploading images' Manually mirror images if you need to manually mirror some images, you can use skopeo copy, this command will preserve the digest where podman would change it. for example to manually copy the cli image to the image registry skopeo copy docker://quay.io/ibmmas/cli:13.13.0 docker://ml-registry1.fyre.ibm.com:5000/ibmmas/cli:13.13.0 References https://github.com/ibm-mas/cli/blob/master/image/cli/mascli/functions/mirror_images Playbooks: https://github.com/ibm-mas/ansible-devops/blob/master/ibm/mas_devops/playbooks/mirror_dependencies.yml","title":"mirror mas and dependencies"},{"location":"airgap/20-airgap_mirorimages/#mirror-mas-and-dependencies-images","text":"Use the mas cli to mirror the images:","title":"Mirror MAS and dependencies images"},{"location":"airgap/20-airgap_mirorimages/#interactive-mode","text":"[ibmmas/cli:13.16.0]mascli$ mas mirror-images IBM Maximo Application Suite Air Gap Image Mirror (v13.16.0) Powered by https://github.com/ibm-mas/ansible-devops/ 1) Configure Catalog Version (see https://ibm-mas.github.io/cli/catalogs/ for details on catalogs) MAS Catalog Version > v9-250306-amd64 MAS Channel > 9.0.X 2) Configure Mirror Mode Working Directory > /images Mirror Mode: 1. Direct 2. To filesystem 3. From filesystem Select Mirror Mode > 1 3) Configure Target Mirror Mirror Registry Host > img-registry1.fyre.ibm.com Mirror Registry Port > 5000 Mirror Registry Prefix > 4) Configure Authentication Mirror Registry Username > admin Re-use saved registry password? [Y/n] 5) Configure Images to Mirror Mirror all MAS images (with dependencies) [y/N] IBM Maximo Operator Catalog [Y/n] IBM Maximo Application Suite - Core [Y/n] n IBM Maximo Application Suite - Assist [y/N] IBM Maximo Application Suite - IoT [y/N] IBM Maximo Application Suite - Manage [y/N] IBM Maximo Application Suite - Monitor [y/N] IBM Maximo Application Suite - Optimizer [y/N] IBM Maximo Application Suite - Predict [y/N] IBM Maximo Application Suite - Visual Inspection [y/N] IBM Foundational Services [Y/n] n IBM Suite License Service [Y/n] n IBM Truststore Manager [Y/n] n MongoDb Community Edition [Y/n] n IBM Db2 [Y/n] n IBM Cloud Pak for Data (CP4D) [y/N] n IBM Watson Studio Local [y/N] IBM Watson Machine Learning [y/N] IBM Analytics Engine (Spark) [y/N] IBM Cognos Analytics [y/N] IBM AppConnect [y/N] Red Hat ODF [y/N] 6) Configure Authentication Re-use saved IBM Entitlement Key? [Y/n] 7) Review Settings Settings Mirror Mode ......................... direct Working Directory ................... /images Target Registry ..................... img-registry1.fyre.ibm.com:5000 IBM Operator Catalog Catalog Version ..................... v9-250306-amd64 MAS Update Channel .................. 9.0.X Content Selection (Core Platform) IBM Maximo Operator Catalog ......... Mirror IBM Maximo Application Suite Core ... Skip Content Selection (Applications) IBM Maximo Assist ................... Skip IBM Maximo IoT ...................... Skip IBM Maximo Manage ................... Skip + IBM Maximo IT ..................... Skip IBM Maximo Monitor .................. Skip IBM Maximo Predict .................. Skip IBM Maximo Optimizer ................ Skip IBM Maximo Visual Inspection ........ Skip Content Selection (Cloud Pak for Data) IBM Cloud Pak for Data (CP4D) ....... Skip IBM Watson Studio ................... Skip IBM Watson Machine Learning ......... Skip IBM Analytics Engine (Spark)......... Skip IBM Cognos Analytics ................ Skip Content Selection (Other Dependencies) IBM Cloud Pak Foundation Services ... Skip IBM Suite License Service ........... Skip IBM Truststore Manager .............. Skip MongoDb Community Edition ........... Skip + Version 4 ......................... Skip + Version 5 ......................... Skip + Version 6 ......................... Skip + Version 7 ......................... Skip IBM Db2 ............................. Skip IBM AppConnect ...................... Skip RedHat ODF .......................... Skip Proceed with these settings [y/N] y 8) Run Mirror Process [SKIPPED] IBM Maximo Application Suite Core [SKIPPED] IBM Maximo Assist [SKIPPED] IBM Maximo IoT [SKIPPED] IBM Maximo Manage [SKIPPED] IBM Maximo Monitor [SKIPPED] IBM Maximo Predict [SKIPPED] IBM Maximo Optimizer [SKIPPED] IBM Maximo Visual Inspection [SUCCESS] Selected Dependencies: /images/logs/mirror-20250430-132211-dependencies.log in the interactive command you have to provide the various options, like the catalog version, the subscription, the private registry details, the working folder, the mirror mode and authentication for the registry.","title":"Interactive mode"},{"location":"airgap/20-airgap_mirorimages/#non-interactive-mode","text":"for the non-interactive options you can refer to the help: [ibmmas/cli:13.24.0]mascli$ mas mirror-images -h IBM Maximo Application Suite Air Gap Image Mirror (v13.24.0) Powered by https://github.com/ibm-mas/ansible-devops/ Usage: mas mirror-images [options] Where specified each option may also be defined by setting the appropriate environment variable. When no options are specified on the command line, interactive-mode will be enabled by default. Mirror Mode (Required): -m, --mode MIRROR_MODE Operation mode (direct, to-filesystem, from-filesystem) -d, --dir MIRROR_WORKING_DIR Working directory for the mirror process Registry Details (Required): -H, --host REGISTRY_PUBLIC_HOST Hostname of the target registry -P, --port REGISTRY_PUBLIC_PORT Port number for the target registry -u, --username REGISTRY_USERNAME Username to authenticate to the target registry -p, --password REGISTRY_PASSWORD Password to authenticate to the target registry Registry Prefix (Optional): -x, --prefix REGISTRY_PREFIX Prefix for the mirror image Source Registry Entitlements (Required based on what content you choose to mirror): --ibm-entitlement IBM_ENTITLEMENT_KEY IBM Entitlement Key --artifactory-username ARTIFACTORY_USERNAME Artifactory Username --artifactory-token ARTIFACTORY_TOKEN Artifactory Token Maximo Operator Catalog Selection (Optional): -c, --catalog MAS_CATALOG_VERSION Maximo Operator Catalog Version to mirror (e.g. v9-240625-amd64) -C, --channel MAS_CHANNEL Maximo Application Suite Channel to mirror (e.g. 9.0.x) Content Selection (Core Platform): --mirror-catalog Mirror the IBM Maximo Operator Catalog --mirror-core Mirror images for IBM Maximo Application Suite Core Content Selection (Applications): --mirror-assist Mirror images for IBM Maximo Assist --mirror-iot Mirror images for IBM Maximo IoT --mirror-manage Mirror images for IBM Maximo Manage --mirror-icd Mirror image for IBM Maximo IT (Separately entitled IBM Maximo Manage extension) --mirror-monitor Mirror images for IBM Maximo Monitor --mirror-optimizer Mirror images for IBM Maximo Optimizer --mirror-predict Mirror images for IBM Maximo Predict --mirror-visualinspection Mirror images for IBM Maximo Visual Inspection Content Selection (Cloud Pak for Data): --mirror-cp4d Mirror images for IBM Cloud Pak for Data Platform --mirror-wsl Mirror images for IBM Watson Studio Local --mirror-wml Mirror images for IBM Watson Machine Learning --mirror-spark Mirror images for IBM Analytics Engine (Spark) --mirror-cognos Mirror images for IBM Cognos Analytics Content Selection (Other Dependencies): --mirror-cfs Mirror images for IBM Cloud Pak Foundation Services --mirror-sls Mirror images for IBM Suite License Service --mirror-tsm Mirror images for IBM Truststore Manager --mirror-mongo Mirror images for MongoDb Community Edition --mirror-mongo-v5 Mirror images for MongoDb Community Edition version 5 --mirror-mongo-v6 Mirror images for MongoDb Community Edition version 6 --mirror-mongo-v7 Mirror images for MongoDb Community Edition version 7 --mirror-db2 Mirror images for IBM Db2 --mirror-appconnect Mirror images for IBM AppConnect --mirror-odf Mirror images for ODF Content Selection (All images included): --mirror-everything Mirror all MAS related images (including dependencies) Other Commands: --no-confirm Mirror images without prompting for confirmation -h, --help Show this help message and to the following example: https://ibm-mas.github.io/cli/examples/mirror-db2/","title":"Non-Interactive Mode"},{"location":"airgap/20-airgap_mirorimages/#troubleshotting","text":"if there are error, you can see them in the log file, you get the link at the end of the run. in the log file you see the details of the ansible playbook executed. In this example the playbook executed was mirror_core you can find more details about the command here: https://github.com/ibm-mas/cli/blob/master/image/cli/mascli/functions/mirror_images the playbook executed: https://github.com/ibm-mas/ansible-devops/blob/master/ibm/mas_devops/playbooks/mirror_dependencies.yml for the other playbooks, you can refer to the code for the mirror_images command, for example: mirror_one_thing $MIRROR_MAS_CORE \"IBM Maximo Application Suite Core\" \"$LOG_PREFIX-core.log\" mirror_core mirror_one_thing $MIRROR_MAS_ASSIST \"IBM Maximo Assist\" \"$LOG_PREFIX-assist.log\" mirror_add_assist mirror_one_thing $MIRROR_MAS_IOT \"IBM Maximo IoT\" \"$LOG_PREFIX-iot.log\" mirror_add_iot mirror_one_thing $MIRROR_MAS_MANAGE \"IBM Maximo Manage\" \"$LOG_PREFIX-manage.log\" mirror_add_manage mirror_one_thing $MIRROR_MAS_MONITOR \"IBM Maximo Monitor\" \"$LOG_PREFIX-monitor.log\" mirror_add_monitor mirror_one_thing $MIRROR_MAS_PREDICT \"IBM Maximo Predict\" \"$LOG_PREFIX-predict.log\" mirror_add_predict mirror_one_thing $MIRROR_MAS_OPTIMIZER \"IBM Maximo Optimizer\" \"$LOG_PREFIX-optimizer.log\" mirror_add_optimizer mirror_one_thing $MIRROR_MAS_VISUALINSPECTION \"IBM Maximo Visual Inspection\" \"$LOG_PREFIX-visualinspection.log\" mirror_add_visualinspection mirror_one_thing $MIRROR_DEPS \"Selected Dependencies\" \"$LOG_PREFIX-dependencies.log\" mirror_dependencies","title":"Troubleshotting"},{"location":"airgap/20-airgap_mirorimages/#details-of-mirrored-images","text":"in the working directory, you will also find a manifest folder, where you will have the details of the images to be mirrored, based on the mirror type, direct, to-filesystem, from-filesystem","title":"Details of mirrored images"},{"location":"airgap/20-airgap_mirorimages/#verify-the-content-of-the-registry","text":"verify content of catalog: curl https://registry.apps.siccing.cp.fyre.ibm.com:443/v2/_catalog -k -u admin","title":"Verify the content of the registry:"},{"location":"airgap/20-airgap_mirorimages/#errors","text":"possible errors in the mirror logs: - 'error: unable to retrieve source image registry.redhat.io/rhel8/postgresql-12 manifest sha256:fa920188f567e51d75aacd723f0964026e42ac060fed392036e8d4b3c7a8129f: Get \"https://registry.redhat.io/v2/rhel8/postgresql-12/manifests/sha256:fa920188f567e51d75aacd723f0964026e42ac060fed392036e8d4b3c7a8129f\": unauthorized: Please login to the Red Hat Registry using your Customer Portal credentials. Further instructions can be found here: https://access.redhat.com/articles/3399531' - 'error: unable to retrieve source image registry.redhat.io/ubi8/nodejs-14 manifest sha256:881e871f845b9395f5e21cfa45f0d1838dc9af60c4f18ece67bd56a9e44846cc: Get \"https://registry.redhat.io/v2/ubi8/nodejs-14/manifests/sha256:881e871f845b9395f5e21cfa45f0d1838dc9af60c4f18ece67bd56a9e44846cc\": unauthorized: Please login to the Red Hat Registry using your Customer Portal credentials. Further instructions can be found here: https://access.redhat.com/articles/3399531' - 'error: an error occurred during planning' check your credentials for the RedHat Registry and check that you are able to pull that image: podman login registry.redhat.io podman pull registry.redhat.io/rhel8/postgresql-12 - 'error: unable to upload blob sha256:e74f44e4f683243a0446e47de088c9c8a1c55278bd3a0526e9e63c5f00000383 to image-registry1.fyre.ibm.com:5000/cp/mas/coreidp-login: received unexpected HTTP status: 500 Internal Server Error' - 'error: unable to upload blob sha256:f391635980289b620e6da853245581ec547fb5028be82822ae4046a7a301cf76 to image-registry1.fyre.ibm.com:5000/cp/mas/coreidp-login: received unexpected HTTP status: 500 Internal Server Error' - 'info: Mirroring completed in 1m37.83s (15.1MB/s)' - 'error: one or more errors occurred while uploading images'","title":"Errors"},{"location":"airgap/20-airgap_mirorimages/#manually-mirror-images","text":"if you need to manually mirror some images, you can use skopeo copy, this command will preserve the digest where podman would change it. for example to manually copy the cli image to the image registry skopeo copy docker://quay.io/ibmmas/cli:13.13.0 docker://ml-registry1.fyre.ibm.com:5000/ibmmas/cli:13.13.0","title":"Manually mirror images"},{"location":"airgap/20-airgap_mirorimages/#references","text":"https://github.com/ibm-mas/cli/blob/master/image/cli/mascli/functions/mirror_images Playbooks: https://github.com/ibm-mas/ansible-devops/blob/master/ibm/mas_devops/playbooks/mirror_dependencies.yml","title":"References"},{"location":"airgap/25-mirror-redhat-images/","text":"Mirror RedHat images mas mirror-redhat-images get pull secret: https://ibm-mas.github.io/cli/commands/mirror-redhat-images/ copy it in a file in the container: echo '{\"auths\":{\"cloud.openshift.com\":{\"auth\":\"b3BlbnNoaW...ONzRDOEc1MA==\",\"email\":\"matthieulrx@nl.ibm.com\"},\"quay.io\":{\"auth\":\"b3BlbnNo...Ec1MA==\",\"email\":\"matthieulrx@nl.ibm.com\"},\"registry.connect.redhat.com\":{\"auth\":\"fHVoYy...hDcHl2MWphaw==\",\"email\":\"matthieulrx@nl.ibm.com\"},\"registry.redhat.io\":{\"auth\":\"fHVoYy1wb29sL...DcHl2MWphaw==\",\"email\":\"matthieulrx@nl.ibm.com\"}}}' > /images/pullsecret.txt Troubleshooting The command had to be executed several time to get to completion References https://ibm-mas.github.io/cli/commands/mirror-redhat-images/","title":"mirror redhat images"},{"location":"airgap/25-mirror-redhat-images/#mirror-redhat-images","text":"mas mirror-redhat-images get pull secret: https://ibm-mas.github.io/cli/commands/mirror-redhat-images/ copy it in a file in the container: echo '{\"auths\":{\"cloud.openshift.com\":{\"auth\":\"b3BlbnNoaW...ONzRDOEc1MA==\",\"email\":\"matthieulrx@nl.ibm.com\"},\"quay.io\":{\"auth\":\"b3BlbnNo...Ec1MA==\",\"email\":\"matthieulrx@nl.ibm.com\"},\"registry.connect.redhat.com\":{\"auth\":\"fHVoYy...hDcHl2MWphaw==\",\"email\":\"matthieulrx@nl.ibm.com\"},\"registry.redhat.io\":{\"auth\":\"fHVoYy1wb29sL...DcHl2MWphaw==\",\"email\":\"matthieulrx@nl.ibm.com\"}}}' > /images/pullsecret.txt","title":"Mirror RedHat images"},{"location":"airgap/25-mirror-redhat-images/#troubleshooting","text":"The command had to be executed several time to get to completion","title":"Troubleshooting"},{"location":"airgap/25-mirror-redhat-images/#references","text":"https://ibm-mas.github.io/cli/commands/mirror-redhat-images/","title":"References"},{"location":"airgap/30-configurecluster/","text":"configure cluster login to the bastion node and run == yum install -y git git clone https://github.com/rook/rook.git cd rook/deploy/examples oc apply -f common.yaml oc apply -f operator-openshift.yaml oc apply -f crds.yaml oc apply -f cluster.yaml oc apply -f ./csi/rbd/storageclass.yaml oc apply -f ./csi/rbd/pvc.yaml oc apply -f filesystem.yaml oc apply -f ./csi/cephfs/storageclass.yaml oc apply -f ./csi/cephfs/pvc.yaml oc apply -f toolbox.yaml set rook-cephfs as default class oc patch storageclass rook-cephfs -p '{\"metadata\": {\"annotations\": {\"storageclass.kubernetes.io/is-default-class\": \"true\"}}}'","title":"configure cluster"},{"location":"airgap/30-configurecluster/#configure-cluster","text":"login to the bastion node and run == yum install -y git git clone https://github.com/rook/rook.git cd rook/deploy/examples oc apply -f common.yaml oc apply -f operator-openshift.yaml oc apply -f crds.yaml oc apply -f cluster.yaml oc apply -f ./csi/rbd/storageclass.yaml oc apply -f ./csi/rbd/pvc.yaml oc apply -f filesystem.yaml oc apply -f ./csi/cephfs/storageclass.yaml oc apply -f ./csi/cephfs/pvc.yaml oc apply -f toolbox.yaml","title":"configure cluster"},{"location":"airgap/30-configurecluster/#set-rook-cephfs-as-default-class","text":"","title":"set rook-cephfs as default class"},{"location":"airgap/30-configurecluster/#oc-patch-storageclass-rook-cephfs-p-metadata-annotations-storageclasskubernetesiois-default-class-true","text":"","title":"oc patch storageclass rook-cephfs -p '{\"metadata\": {\"annotations\": {\"storageclass.kubernetes.io/is-default-class\": \"true\"}}}'"},{"location":"airgap/35-airgap_configureocpformirror/","text":"Configure ocp for mirror Steps Interactive Mode [ibmmas/cli:13.24.0]mascli$ mas configure-airgap IBM Maximo Application Suite Air Gap OCP Setup (v13.24.0) Powered by https://github.com/ibm-mas/ansible-devops/ 1) Set Target OpenShift Cluster Connected to OCP cluster: https://console-openshift-console.apps.mas-ml.cp.fyre.ibm.com Proceed with this cluster? [Y/n] 2) Configure Target Mirror Mirror Registry Host > img-registry1.fyre.ibm.com Mirror Registry Port > 5000 Mirror Registry Prefix > Mirror Registry CA File > /images/certs/ca.crt /mascli/functions/configure_airgap: line 114: REGISTRY_PRIVATE_URL: command not found 3) Configure Authentication Mirror Registry Username > admin \ud83d\udd10 Mirror Registry Password > ****** 4) Red Hat Catalog Management NEW! From release 7.9 of the MAS CLI it is now possible to mirror a curated version of the Red Hat Operator catalogs containing only the operators that IBM Maximo Application Suite requires using mas mirror-redhat and automatically configure OpenShift Container Platform to use these catalogs: 1. OperatorHub will be re-configured to disable the default online catalog sources 2. Three offline catalog sources will be created/updated in the openshift-marketplace namespace: - certified-operator-index -> /redhat/certified-operator-index:v4.16 - community-operator-index -> /redhat/community-operator-index:v4.16 - redhat-operator-index -> /redhat/redhat-operator-index:v4.16 Enable IBM managed Red Hat catalogs? [y/N] y Review Settings Private Registry Connection Host ...................... img-registry1.fyre.ibm.com Port ...................... 5000 Prefix .................... CA File ................... /images/certs/server.crt Red Hat Catalog Management Management Mode ........... IBM Managed/Configured Proceed with these settings [y/N] Non-Interactive Mode export SETUP_REDHAT_RELEASE=true export SETUP_REDHAT_CATALOGS=true mas configure-airgap -H img-registry1.fyre.ibm.com -P 5000 -c /images/certs/ca.crt -u admin -p redhat --no-confirm Troubleshooting ImageDigestMirrorSet The above command will execute: https://github.com/ibm-mas/cli/blob/master/image/cli/mascli/functions/configure_airgap that will call the following ansible role: https://github.com/ibm-mas/ansible-devops/tree/master/ibm/mas_devops/roles/ocp_idms as a result, that will create an imageDigestMirrorSet. An ImageDigestMirrorSet (IDMS) in OpenShift is a custom resource (CR) used to configure image mirroring based on image digests, allowing you to pull images from a mirrored registry when the image digest matches a configured rule. oc get idms oc get idms -oyaml if not there, when pulling an image from the external registry, OCP would not know where to get it and you would have an imagepull error. NOTE: idms and itms were introduced in ocp 4.14. before that it was icsp (imagecontentsourcepolicy) oc get imagecontentsourcepolicies NAME AGE ibm-mas-and-dependencies 3m28s oc get imagecontentsourcepolicies -o yaml extract from the yaml: spec: repositoryDigestMirrors: - mirrors: - image-registry1.fyre.ibm.com:5000/cpopen source: icr.io/cpopen - mirrors: - image-registry1.fyre.ibm.com:5000/ibm-truststore-mgr source: icr.io/ibm-truststore-mgr Certificate when the command is executed, a configmap is created in the openshift-config namespace to contain the image registry CA certificate. this secret is referenced in the image.config.openshift.io oc get image.config.openshift.io cluster -oyaml for more information: - https://github.com/ibm-mas/ansible-devops/blob/master/ibm/mas_devops/roles/ocp_idms/tasks/trust.yml - https://access.redhat.com/solutions/6969479 this is the certificate that was created when the registry was created, if it has expired, you will need to update this configmap machineConfig when the idms is created, the config will be applied to each node through a machine config if a failure occurs, you may see something like: TASK [ibm.mas_devops.ocp_idms : Wait for node pools to finish updating] ************************************************************************ FAILED - RETRYING: [localhost]: Wait for node pools to finish updating (30 retries left). To troubleshoot, you can open the machine config (sort by created descending) search in the yaml for: - contents: compression: '' source: 'data:text/plain;charset=utf-8;base64,dW5xdWFsaWZpZWQtc2VhcmNoLXJlZ2lzdHJpZXMgPSBbInJlZ2lzdHJ5LmFjY2Vzcy5yZWRoYXQuY29tIiwgImRvY2tlci5pbyJdCnNob3J0LW5hbWUtbW9kZSA9ICIiCgpbW3JlZ2lzdHJ5XV0KICBwcmVmaXggPSAiIgogIGxvY2F0aW9uID0gImNwLmljci5pby9jcCIKICBibG9ja2VkID0gdHJ1ZQoKICBbW3JlZ2lzdHJ5Lm1pcnJvcl1dCiAgICBsb2NhdGlvbiA9ICJtbC1yZWdpc3RyeTEuZnlyZS5pYm0uY29tOjUwMDAvY3AiCiAgICBwdWxsLWZyb20tbWlycm9yID0gImRpZ2VzdC1vbmx5IgoKW1tyZWdpc3R[...] m1pcnJvcl1dCiAgICBsb2NhdGlvbiA9ICJtbC1yZWdpc3RyeTEuZnlyZS5pYm0uY29tOjUwMDAvdWJpOCIKICAgIHB1bGwtZnJvbS1taXJyb3IgPSAiZGlnZXN0LW9ubHkiCgpbW3JlZ2lzdHJ5XV0KICBwcmVmaXggPSAiIgogIGxvY2F0aW9uID0gInJlZ2lzdHJ5LnJlZGhhdC5pby91Ymk5IgogIGJsb2NrZWQgPSB0cnVlCgogIFtbcmVnaXN0cnkubWlycm9yXV0KICAgIGxvY2F0aW9uID0gIm1sLXJlZ2lzdHJ5MS5meXJlLmlibS5jb206NTAwMC91Ymk5IgogICAgcHVsbC1mcm9tLW1pcnJvciA9ICJkaWdlc3Qtb25seSIK' mode: 420 overwrite: true path: /etc/containers/registries.conf the string is base 64 encoded, you can decode it to view the content: echo \"dW5xdWFsaWZpZWQtc2VhcmNoLXJlZ2lzdHJpZXMgPSBbInJlZ2lzdHJ5LmFjY2Vzcy5yZWRoYXQuY29tIiwgImRvY2tlci5pbyJdCnNob3J0LW5hbWUtbW9kZSA9ICIiCgpbW3JlZ2lzdHJ5XV0KICBwcmVmaXggPSAiIgogIGxvY2F0aW9uID0gImNwLmljci5pby9jcCIKICBibG9ja2VkID0gdHJ1ZQoKICBbW3JlZ2lzdHJ5Lm1pcnJvcl1dCiAgICBsb2NhdGlvbiA9ICJtbC1yZWdpc3RyeTEuZnlyZS5pYm0uY29tOjUwMDAvY3AiCiAgICBwdWxsLWZyb20tbWlycm9yID0gImRpZ2VzdC1vbmx5IgoKW1tyZWdpc3R[...] m1pcnJvcl1dCiAgICBsb2NhdGlvbiA9ICJtbC1yZWdpc3RyeTEuZnlyZS5pYm0uY29tOjUwMDAvdWJpOCIKICAgIHB1bGwtZnJvbS1taXJyb3IgPSAiZGlnZXN0LW9ubHkiCgpbW3JlZ2lzdHJ5XV0KICBwcmVmaXggPSAiIgogIGxvY2F0aW9uID0gInJlZ2lzdHJ5LnJlZGhhdC5pby91Ymk5IgogIGJsb2NrZWQgPSB0cnVlCgogIFtbcmVnaXN0cnkubWlycm9yXV0KICAgIGxvY2F0aW9uID0gIm1sLXJlZ2lzdHJ5MS5meXJlLmlibS5jb206NTAwMC91Ymk5IgogICAgcHVsbC1mcm9tLW1pcnJvciA9ICJkaWdlc3Qtb25seSIK\" | base64 -d you can check the mahine config pool to see what is machine config was applied: oc get mcp NAME CONFIG UPDATED UPDATING DEGRADED MACHINECOUNT READYMACHINECOUNT UPDATEDMACHINECOUNT DEGRADEDMACHINECOUNT AGE master rendered-master-5c62e30608f8b465e90185efde5f0baa True False False 3 3 3 0 105m worker rendered-worker-56d4a60c79317f246280a1583ee116e3 True False False 3 3 3 0 105m References https://docs.redhat.com/en/documentation/openshift_container_platform/4.16/html/config_apis/imagedigestmirrorset-config-openshift-io-v1 https://github.com/ibm-mas/ansible-devops/blob/master/ibm/mas_devops/roles/ocp_idms/tasks/trust.yml https://access.redhat.com/solutions/6969479 https://github.com/ibm-mas/cli/blob/master/image/cli/mascli/functions/configure_mirror https://github.com/ibm-mas/ansible-devops/tree/master/ibm/mas_devops/roles/ocp_idms","title":"Configure OpenShift for mirror"},{"location":"airgap/35-airgap_configureocpformirror/#configure-ocp-for-mirror","text":"","title":"Configure ocp for mirror"},{"location":"airgap/35-airgap_configureocpformirror/#steps","text":"","title":"Steps"},{"location":"airgap/35-airgap_configureocpformirror/#interactive-mode","text":"[ibmmas/cli:13.24.0]mascli$ mas configure-airgap IBM Maximo Application Suite Air Gap OCP Setup (v13.24.0) Powered by https://github.com/ibm-mas/ansible-devops/ 1) Set Target OpenShift Cluster Connected to OCP cluster: https://console-openshift-console.apps.mas-ml.cp.fyre.ibm.com Proceed with this cluster? [Y/n] 2) Configure Target Mirror Mirror Registry Host > img-registry1.fyre.ibm.com Mirror Registry Port > 5000 Mirror Registry Prefix > Mirror Registry CA File > /images/certs/ca.crt /mascli/functions/configure_airgap: line 114: REGISTRY_PRIVATE_URL: command not found 3) Configure Authentication Mirror Registry Username > admin \ud83d\udd10 Mirror Registry Password > ****** 4) Red Hat Catalog Management NEW! From release 7.9 of the MAS CLI it is now possible to mirror a curated version of the Red Hat Operator catalogs containing only the operators that IBM Maximo Application Suite requires using mas mirror-redhat and automatically configure OpenShift Container Platform to use these catalogs: 1. OperatorHub will be re-configured to disable the default online catalog sources 2. Three offline catalog sources will be created/updated in the openshift-marketplace namespace: - certified-operator-index -> /redhat/certified-operator-index:v4.16 - community-operator-index -> /redhat/community-operator-index:v4.16 - redhat-operator-index -> /redhat/redhat-operator-index:v4.16 Enable IBM managed Red Hat catalogs? [y/N] y Review Settings Private Registry Connection Host ...................... img-registry1.fyre.ibm.com Port ...................... 5000 Prefix .................... CA File ................... /images/certs/server.crt Red Hat Catalog Management Management Mode ........... IBM Managed/Configured Proceed with these settings [y/N]","title":"Interactive Mode"},{"location":"airgap/35-airgap_configureocpformirror/#non-interactive-mode","text":"export SETUP_REDHAT_RELEASE=true export SETUP_REDHAT_CATALOGS=true mas configure-airgap -H img-registry1.fyre.ibm.com -P 5000 -c /images/certs/ca.crt -u admin -p redhat --no-confirm","title":"Non-Interactive Mode"},{"location":"airgap/35-airgap_configureocpformirror/#troubleshooting","text":"","title":"Troubleshooting"},{"location":"airgap/35-airgap_configureocpformirror/#imagedigestmirrorset","text":"The above command will execute: https://github.com/ibm-mas/cli/blob/master/image/cli/mascli/functions/configure_airgap that will call the following ansible role: https://github.com/ibm-mas/ansible-devops/tree/master/ibm/mas_devops/roles/ocp_idms as a result, that will create an imageDigestMirrorSet. An ImageDigestMirrorSet (IDMS) in OpenShift is a custom resource (CR) used to configure image mirroring based on image digests, allowing you to pull images from a mirrored registry when the image digest matches a configured rule. oc get idms oc get idms -oyaml if not there, when pulling an image from the external registry, OCP would not know where to get it and you would have an imagepull error. NOTE: idms and itms were introduced in ocp 4.14. before that it was icsp (imagecontentsourcepolicy) oc get imagecontentsourcepolicies NAME AGE ibm-mas-and-dependencies 3m28s oc get imagecontentsourcepolicies -o yaml extract from the yaml: spec: repositoryDigestMirrors: - mirrors: - image-registry1.fyre.ibm.com:5000/cpopen source: icr.io/cpopen - mirrors: - image-registry1.fyre.ibm.com:5000/ibm-truststore-mgr source: icr.io/ibm-truststore-mgr","title":"ImageDigestMirrorSet"},{"location":"airgap/35-airgap_configureocpformirror/#certificate","text":"when the command is executed, a configmap is created in the openshift-config namespace to contain the image registry CA certificate. this secret is referenced in the image.config.openshift.io oc get image.config.openshift.io cluster -oyaml for more information: - https://github.com/ibm-mas/ansible-devops/blob/master/ibm/mas_devops/roles/ocp_idms/tasks/trust.yml - https://access.redhat.com/solutions/6969479 this is the certificate that was created when the registry was created, if it has expired, you will need to update this configmap","title":"Certificate"},{"location":"airgap/35-airgap_configureocpformirror/#machineconfig","text":"when the idms is created, the config will be applied to each node through a machine config if a failure occurs, you may see something like: TASK [ibm.mas_devops.ocp_idms : Wait for node pools to finish updating] ************************************************************************ FAILED - RETRYING: [localhost]: Wait for node pools to finish updating (30 retries left). To troubleshoot, you can open the machine config (sort by created descending) search in the yaml for: - contents: compression: '' source: 'data:text/plain;charset=utf-8;base64,dW5xdWFsaWZpZWQtc2VhcmNoLXJlZ2lzdHJpZXMgPSBbInJlZ2lzdHJ5LmFjY2Vzcy5yZWRoYXQuY29tIiwgImRvY2tlci5pbyJdCnNob3J0LW5hbWUtbW9kZSA9ICIiCgpbW3JlZ2lzdHJ5XV0KICBwcmVmaXggPSAiIgogIGxvY2F0aW9uID0gImNwLmljci5pby9jcCIKICBibG9ja2VkID0gdHJ1ZQoKICBbW3JlZ2lzdHJ5Lm1pcnJvcl1dCiAgICBsb2NhdGlvbiA9ICJtbC1yZWdpc3RyeTEuZnlyZS5pYm0uY29tOjUwMDAvY3AiCiAgICBwdWxsLWZyb20tbWlycm9yID0gImRpZ2VzdC1vbmx5IgoKW1tyZWdpc3R[...] m1pcnJvcl1dCiAgICBsb2NhdGlvbiA9ICJtbC1yZWdpc3RyeTEuZnlyZS5pYm0uY29tOjUwMDAvdWJpOCIKICAgIHB1bGwtZnJvbS1taXJyb3IgPSAiZGlnZXN0LW9ubHkiCgpbW3JlZ2lzdHJ5XV0KICBwcmVmaXggPSAiIgogIGxvY2F0aW9uID0gInJlZ2lzdHJ5LnJlZGhhdC5pby91Ymk5IgogIGJsb2NrZWQgPSB0cnVlCgogIFtbcmVnaXN0cnkubWlycm9yXV0KICAgIGxvY2F0aW9uID0gIm1sLXJlZ2lzdHJ5MS5meXJlLmlibS5jb206NTAwMC91Ymk5IgogICAgcHVsbC1mcm9tLW1pcnJvciA9ICJkaWdlc3Qtb25seSIK' mode: 420 overwrite: true path: /etc/containers/registries.conf the string is base 64 encoded, you can decode it to view the content: echo \"dW5xdWFsaWZpZWQtc2VhcmNoLXJlZ2lzdHJpZXMgPSBbInJlZ2lzdHJ5LmFjY2Vzcy5yZWRoYXQuY29tIiwgImRvY2tlci5pbyJdCnNob3J0LW5hbWUtbW9kZSA9ICIiCgpbW3JlZ2lzdHJ5XV0KICBwcmVmaXggPSAiIgogIGxvY2F0aW9uID0gImNwLmljci5pby9jcCIKICBibG9ja2VkID0gdHJ1ZQoKICBbW3JlZ2lzdHJ5Lm1pcnJvcl1dCiAgICBsb2NhdGlvbiA9ICJtbC1yZWdpc3RyeTEuZnlyZS5pYm0uY29tOjUwMDAvY3AiCiAgICBwdWxsLWZyb20tbWlycm9yID0gImRpZ2VzdC1vbmx5IgoKW1tyZWdpc3R[...] m1pcnJvcl1dCiAgICBsb2NhdGlvbiA9ICJtbC1yZWdpc3RyeTEuZnlyZS5pYm0uY29tOjUwMDAvdWJpOCIKICAgIHB1bGwtZnJvbS1taXJyb3IgPSAiZGlnZXN0LW9ubHkiCgpbW3JlZ2lzdHJ5XV0KICBwcmVmaXggPSAiIgogIGxvY2F0aW9uID0gInJlZ2lzdHJ5LnJlZGhhdC5pby91Ymk5IgogIGJsb2NrZWQgPSB0cnVlCgogIFtbcmVnaXN0cnkubWlycm9yXV0KICAgIGxvY2F0aW9uID0gIm1sLXJlZ2lzdHJ5MS5meXJlLmlibS5jb206NTAwMC91Ymk5IgogICAgcHVsbC1mcm9tLW1pcnJvciA9ICJkaWdlc3Qtb25seSIK\" | base64 -d you can check the mahine config pool to see what is machine config was applied: oc get mcp NAME CONFIG UPDATED UPDATING DEGRADED MACHINECOUNT READYMACHINECOUNT UPDATEDMACHINECOUNT DEGRADEDMACHINECOUNT AGE master rendered-master-5c62e30608f8b465e90185efde5f0baa True False False 3 3 3 0 105m worker rendered-worker-56d4a60c79317f246280a1583ee116e3 True False False 3 3 3 0 105m","title":"machineConfig"},{"location":"airgap/35-airgap_configureocpformirror/#references","text":"https://docs.redhat.com/en/documentation/openshift_container_platform/4.16/html/config_apis/imagedigestmirrorset-config-openshift-io-v1 https://github.com/ibm-mas/ansible-devops/blob/master/ibm/mas_devops/roles/ocp_idms/tasks/trust.yml https://access.redhat.com/solutions/6969479 https://github.com/ibm-mas/cli/blob/master/image/cli/mascli/functions/configure_mirror https://github.com/ibm-mas/ansible-devops/tree/master/ibm/mas_devops/roles/ocp_idms","title":"References"},{"location":"airgap/40-airgap_simulateairgap/","text":"Simulate airgap Get the registry certificate if you deployed the registry in OCP: oc extract secret/airgap-registry-ca -n airgap-registry export REGISTRY_PRIVATE_CA_FILE=ca.crt if yo udeployed the registry in a VM: export REGISTRY_PRIVATE_CA_FILE=/mnt/home/domain.crt export REGISTRY_PRIVATE_CA_FILE=/images/certs/ca.crt Remove connectivity to the external registies to simulate airgap, we remove connectivity to the external registries. To do so, we create a fake entry in the host file of the nodes for the various registries. mascli$ ansible localhost -m include_role -a name=ansible-devops/roles/ocp_simulate_disconnected_network Alternatively, you can use the playbook ocp_convert_to_disconnected, that will execute the following 3 roles: - ibm.mas_devops.ocp_config - ibm.mas_devops.ocp_idms - ibm.mas_devops.ocp_simulate_disconnected_network export REGISTRY_PRIVATE_HOST=mlregistry1.fyre.ibm.com export REGISTRY_PRIVATE_PORT=5000 export REGISTRY_PRIVATE_CA_FILE=/images/certs/domain.crt export REGISTRY_USERNAME=admin export REGISTRY_PASSWORD=redhat ansible-playbook ansible-devops/playbooks/ocp_convert_to_disconnected.yml Troubleshooting verify the host file on the host when the role is executed, a machine config is created and applied to all the nodes. you can check the host file on the node, for example: [root@api.mas-ml-airgap.cp.fyre.ibm.com ~]# ssh core@worker1 'cat /etc/hosts' 127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4 ::1 localhost localhost.localdomain localhost6 localhost6.localdomain6 1.2.3.4 quay.io registry.redhat.io registry.connect.redhat.com gcr.io nvcr.io icr.io cp.icr.io docker-na-public.artifactory.swg-devops.com 172.30.210.198 image-registry.openshift-image-registry.svc image-registry.openshift-image-registry.svc.cluster.local # openshift-generated-node-resolver verify the machine config in the list of machine config, you can look for the last applie config and search the yaml for the hosts file, then you can use base64 to view the data: matthieu:~$ echo \"MTI3LjAuMC4xICAgbG9jYWxob3N0IGxvY2FsaG9zdC5sb2NhbGRvbWFpbiBsb2NhbGhvc3Q0IGxvY2FsaG9zdDQubG9jYWxkb21haW40Cjo6MSAgICAgICAgIGxvY2FsaG9zdCBsb2NhbGhvc3QubG9jYWxkb21haW4gbG9jYWxob3N0NiBsb2NhbGhvc3Q2LmxvY2FsZG9tYWluNgoxLjIuMy40ICAgICBxdWF5LmlvIHJlZ2lzdHJ5LnJlZGhhdC5pbyByZWdpc3RyeS5jb25uZWN0LnJlZGhhdC5jb20gZ2NyLmlvIG52Y3IuaW8gaWNyLmlvIGNwLmljci5pbyBkb2NrZXItbmEtcHVibGljLmFydGlmYWN0b3J5LnN3Zy1kZXZvcHMuY29tIGRvY2tlci1uYS1wcm94eS1zdmwuYXJ0aWZhY3Rvcnkuc3dnLWRldm9wcy5jb20gZG9ja2VyLW5hLXByb3h5LXJ0cC5hcnRpZmFjdG9yeS5zd2ctZGV2b3BzLmNvbQoxNzIuMzAuMjMyLjE2IGltYWdlLXJlZ2lzdHJ5Lm9wZW5zaGlmdC1pbWFnZS1yZWdpc3RyeS5zdmMgaW1hZ2UtcmVnaXN0cnkub3BlbnNoaWZ0LWltYWdlLXJlZ2lzdHJ5LnN2Yy5jbHVzdGVyLmxvY2FsICMgb3BlbnNoaWZ0LWdlbmVyYXRlZC1ub2RlLXJlc29sdmVyCg==\" | base64 -d 127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4 ::1 localhost localhost.localdomain localhost6 localhost6.localdomain6 1.2.3.4 quay.io registry.redhat.io registry.connect.redhat.com gcr.io nvcr.io icr.io cp.icr.io docker-na-public.artifactory.swg-devops.com docker-na-proxy-svl.artifactory.swg-devops.com docker-na-proxy-rtp.artifactory.swg-devops.com 172.30.232.16 image-registry.openshift-image-registry.svc image-registry.openshift-image-registry.svc.cluster.local # openshift-generated-node-resolver Disable catalog after the nodes are updated with the latest machine config, you may start seeing some pods in crashloopback, maybe you are missing some images in the registry or some configuration is incorrect (IDMS) when ocp_idms role was executed, 3 new catalogs were created: https://github.com/ibm-mas/ansible-devops/blob/master/ibm/mas_devops/roles/ocp_idms/templates/idms/mas-redhat-catalogs.yml.j2 those use the private registry catalog sources that were present before may be in transient failure status you need to disable them, otherwise that will cause issue when installing operators oc get catalogsource -A NAMESPACE NAME DISPLAY TYPE PUBLISHER AGE openshift-marketplace certified-operator-index Certified Operators grpc Red Hat 38m openshift-marketplace certified-operators Certified Operators grpc Red Hat 133m openshift-marketplace community-operator-index Community Operators grpc Red Hat 38m openshift-marketplace community-operators Community Operators grpc Red Hat 133m openshift-marketplace redhat-marketplace Red Hat Marketplace grpc Red Hat 133m openshift-marketplace redhat-operator-index Red Hat Operators grpc Red Hat 38m openshift-marketplace redhat-operators Red Hat Operators grpc Red Hat 133m oc patch operatorhubs/cluster --type merge --patch '{\"spec\":{\"sources\":[{\"disabled\": true,\"name\": \"certified-operators\"},{\"disabled\": true,\"name\": \"community-operators\"},{\"disabled\": true,\"name\": \"redhat-marketplace\"},{\"disabled\": true,\"name\": \"redhat-operators\"}]}}' References https://github.com/ibm-mas/ansible-devops/tree/master/ibm/mas_devops/roles/ocp_simulate_disconnected_network https://github.com/ibm-mas/ansible-devops/blob/master/ibm/mas_devops/playbooks/ocp_convert_to_disconnected.yml https://access.redhat.com/solutions/5611481","title":"Simulate an airgap environment"},{"location":"airgap/40-airgap_simulateairgap/#simulate-airgap","text":"","title":"Simulate airgap"},{"location":"airgap/40-airgap_simulateairgap/#get-the-registry-certificate","text":"if you deployed the registry in OCP: oc extract secret/airgap-registry-ca -n airgap-registry export REGISTRY_PRIVATE_CA_FILE=ca.crt if yo udeployed the registry in a VM: export REGISTRY_PRIVATE_CA_FILE=/mnt/home/domain.crt export REGISTRY_PRIVATE_CA_FILE=/images/certs/ca.crt","title":"Get the registry certificate"},{"location":"airgap/40-airgap_simulateairgap/#remove-connectivity-to-the-external-registies","text":"to simulate airgap, we remove connectivity to the external registries. To do so, we create a fake entry in the host file of the nodes for the various registries. mascli$ ansible localhost -m include_role -a name=ansible-devops/roles/ocp_simulate_disconnected_network Alternatively, you can use the playbook ocp_convert_to_disconnected, that will execute the following 3 roles: - ibm.mas_devops.ocp_config - ibm.mas_devops.ocp_idms - ibm.mas_devops.ocp_simulate_disconnected_network export REGISTRY_PRIVATE_HOST=mlregistry1.fyre.ibm.com export REGISTRY_PRIVATE_PORT=5000 export REGISTRY_PRIVATE_CA_FILE=/images/certs/domain.crt export REGISTRY_USERNAME=admin export REGISTRY_PASSWORD=redhat ansible-playbook ansible-devops/playbooks/ocp_convert_to_disconnected.yml","title":"Remove connectivity to the external registies"},{"location":"airgap/40-airgap_simulateairgap/#troubleshooting","text":"","title":"Troubleshooting"},{"location":"airgap/40-airgap_simulateairgap/#verify-the-host-file-on-the-host","text":"when the role is executed, a machine config is created and applied to all the nodes. you can check the host file on the node, for example: [root@api.mas-ml-airgap.cp.fyre.ibm.com ~]# ssh core@worker1 'cat /etc/hosts' 127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4 ::1 localhost localhost.localdomain localhost6 localhost6.localdomain6 1.2.3.4 quay.io registry.redhat.io registry.connect.redhat.com gcr.io nvcr.io icr.io cp.icr.io docker-na-public.artifactory.swg-devops.com 172.30.210.198 image-registry.openshift-image-registry.svc image-registry.openshift-image-registry.svc.cluster.local # openshift-generated-node-resolver","title":"verify the host file on the host"},{"location":"airgap/40-airgap_simulateairgap/#verify-the-machine-config","text":"in the list of machine config, you can look for the last applie config and search the yaml for the hosts file, then you can use base64 to view the data: matthieu:~$ echo \"MTI3LjAuMC4xICAgbG9jYWxob3N0IGxvY2FsaG9zdC5sb2NhbGRvbWFpbiBsb2NhbGhvc3Q0IGxvY2FsaG9zdDQubG9jYWxkb21haW40Cjo6MSAgICAgICAgIGxvY2FsaG9zdCBsb2NhbGhvc3QubG9jYWxkb21haW4gbG9jYWxob3N0NiBsb2NhbGhvc3Q2LmxvY2FsZG9tYWluNgoxLjIuMy40ICAgICBxdWF5LmlvIHJlZ2lzdHJ5LnJlZGhhdC5pbyByZWdpc3RyeS5jb25uZWN0LnJlZGhhdC5jb20gZ2NyLmlvIG52Y3IuaW8gaWNyLmlvIGNwLmljci5pbyBkb2NrZXItbmEtcHVibGljLmFydGlmYWN0b3J5LnN3Zy1kZXZvcHMuY29tIGRvY2tlci1uYS1wcm94eS1zdmwuYXJ0aWZhY3Rvcnkuc3dnLWRldm9wcy5jb20gZG9ja2VyLW5hLXByb3h5LXJ0cC5hcnRpZmFjdG9yeS5zd2ctZGV2b3BzLmNvbQoxNzIuMzAuMjMyLjE2IGltYWdlLXJlZ2lzdHJ5Lm9wZW5zaGlmdC1pbWFnZS1yZWdpc3RyeS5zdmMgaW1hZ2UtcmVnaXN0cnkub3BlbnNoaWZ0LWltYWdlLXJlZ2lzdHJ5LnN2Yy5jbHVzdGVyLmxvY2FsICMgb3BlbnNoaWZ0LWdlbmVyYXRlZC1ub2RlLXJlc29sdmVyCg==\" | base64 -d 127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4 ::1 localhost localhost.localdomain localhost6 localhost6.localdomain6 1.2.3.4 quay.io registry.redhat.io registry.connect.redhat.com gcr.io nvcr.io icr.io cp.icr.io docker-na-public.artifactory.swg-devops.com docker-na-proxy-svl.artifactory.swg-devops.com docker-na-proxy-rtp.artifactory.swg-devops.com 172.30.232.16 image-registry.openshift-image-registry.svc image-registry.openshift-image-registry.svc.cluster.local # openshift-generated-node-resolver","title":"verify the machine config"},{"location":"airgap/40-airgap_simulateairgap/#disable-catalog","text":"after the nodes are updated with the latest machine config, you may start seeing some pods in crashloopback, maybe you are missing some images in the registry or some configuration is incorrect (IDMS) when ocp_idms role was executed, 3 new catalogs were created: https://github.com/ibm-mas/ansible-devops/blob/master/ibm/mas_devops/roles/ocp_idms/templates/idms/mas-redhat-catalogs.yml.j2 those use the private registry catalog sources that were present before may be in transient failure status you need to disable them, otherwise that will cause issue when installing operators oc get catalogsource -A NAMESPACE NAME DISPLAY TYPE PUBLISHER AGE openshift-marketplace certified-operator-index Certified Operators grpc Red Hat 38m openshift-marketplace certified-operators Certified Operators grpc Red Hat 133m openshift-marketplace community-operator-index Community Operators grpc Red Hat 38m openshift-marketplace community-operators Community Operators grpc Red Hat 133m openshift-marketplace redhat-marketplace Red Hat Marketplace grpc Red Hat 133m openshift-marketplace redhat-operator-index Red Hat Operators grpc Red Hat 38m openshift-marketplace redhat-operators Red Hat Operators grpc Red Hat 133m oc patch operatorhubs/cluster --type merge --patch '{\"spec\":{\"sources\":[{\"disabled\": true,\"name\": \"certified-operators\"},{\"disabled\": true,\"name\": \"community-operators\"},{\"disabled\": true,\"name\": \"redhat-marketplace\"},{\"disabled\": true,\"name\": \"redhat-operators\"}]}}'","title":"Disable catalog"},{"location":"airgap/40-airgap_simulateairgap/#references","text":"https://github.com/ibm-mas/ansible-devops/tree/master/ibm/mas_devops/roles/ocp_simulate_disconnected_network https://github.com/ibm-mas/ansible-devops/blob/master/ibm/mas_devops/playbooks/ocp_convert_to_disconnected.yml https://access.redhat.com/solutions/5611481","title":"References"},{"location":"airgap/50-airgap_masinstall/","text":"mas install in airgap environment mascli$ mas install IBM Maximo Application Suite Installer Powered by https://github.com/ibm-mas/ansible-devops/ and https://tekton.dev/ Current Limitations 1. Support for airgap installation is limited to Core with IoT, Manage, Optimizer at present Set Target OpenShift Cluster Connected to OCP cluster: https://console-openshift-console.apps.siccing.cp.fyre.ibm.com Proceed with this cluster? [Y/n] y Install OpenShift Pipelines Operator OpenShift Pipelines Operator is installed and ready Configure Installation MAS Instance ID > ag MAS Workspace ID > agws MAS Workspace Display Name > airgap workspace MAS Version: April 14 2023 Update 8.10.0 8.9.4 March 14 2023 Update 8.9.3 February 17 2023 Update 8.9.2 January 11 2023 Update 8.9.1 Select Catalog Source > 1 3.1. License Terms For information about your license, see https://ibm.biz/MAS810-License To continue with the installation, you must accept the license terms. Do you accept the license terms? [y/N] y Configure Operation Mode Maximo Application Suite can be installed in a non-production mode for internal development and testing, this setting cannot be changed after installation: All applications, add-ons, and solutions have 0 (zero) installation AppPoints in non-production installations. These specifications are also visible in the metrics that are shared with IBM\u00ae and on the product UI. Use non-production mode? [y/N] y Configure Domain & Certificate Management Configure Custom Domain [y/N] n Application Selection Install IoT [y/N] n Install Manage [y/N] n Install Optimizer [y/N] n Install Visual Inspection [y/N] Configure Db2 The installer can setup one or more IBM Db2 instances in your OpenShift cluster for the use of applications that require a JDBC datasource (IoT, Manage, Monitor, & Predict) or you may choose to configure MAS to use an existing database. No applications have been selected that require a Db2 installation Additional Configuration Additional resource definitions can be applied to the OpenShift Cluster during the MAS configuration step. The primary purpose of this is to apply configuration for Maximo Application Suite itself, but you can use this to deploy ANY additional resource into your cluster. Use additional configurations? [y/N] n Configure Storage Class Usage Maximo Application Suite and it's dependencies require storage classes that support ReadWriteOnce (RWO) and ReadWriteMany (RWX) access modes: ReadWriteOnce volumes can be mounted as read-write by multiple pods on a single node. ReadWriteMany volumes can be mounted as read-write by multiple pods across many nodes. Select the ReadWriteOnce and ReadWriteMany storage classes to use from the list below: - rook-ceph-block - rook-cephfs Enter 'none' for the ReadWriteMany storage class if you do not have a suitable class available in the cluster, however this will limit what can be installed ReadWriteOnce (RWO) storage class > rook-ceph-block ReadWriteMany (RWX) storage class > rook-cephfs Advanced Settings Configure Advanced Settings (optional)? [y/N] n Configure IBM Container Registry IBM Entitlement Key > * * * * * * * * * * * * * * * * * * * * * * * * * * Configure Product License License ID > 10005ae0addd License File > /images/license.dat Configure UDS UDS Contact Email > matthieulrx@nl.ibm.com UDS Contact First Name > Matthieu UDS Contact Last Name > Leroux Prepare Installation If you are using using storage classes that utilize 'WaitForFirstConsumer' binding mode choose 'No' at the prompt below Wait for PVCs to bind? [Y/n] n Preparing namespace 'mas-ag-pipelines' ...Override image tag '4.1.3' with digest? [Y/n] y Using image digest sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 Namespace 'mas-ag-pipelines' is ready Installed Task Definitions mas-devops-appconnect quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-cert-manager quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-cluster-monitoring quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-common-services quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-cos quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-cp4d quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-cp4d-service quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-db2 quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-gencfg-workspace quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-ibm-catalogs quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-kafka quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-mongodb quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-must-gather quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-nvidia-gpu quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-sls quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-suite-app-config quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-suite-app-install quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-suite-app-upgrade quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-suite-config quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-suite-db2-setup-for-manage quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-suite-dns quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-suite-install quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-suite-uninstall quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-suite-upgrade quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-suite-verify quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-uds quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 Installed Pipeline Definitions NAME AGE mas-db2 1s mas-install 1s mas-uninstall 1s mas-update 1s mas-upgrade 1s quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 is available from the target OCP cluster Review Settings IBM Maximo Application Suite Instance ID ............... ag Workspace ID .............. agws Workspace Name ............ airgap workspace Operation Mode ............ Non-production Catalog Source ............ ibm-operator-catalog Subscription Channel ...... 8.10.x IBM Entitled Registry ..... cp.icr.io/cp IBM Open Registry ......... icr.io/cpopen Entitlement Username ...... cp Entitlement Key ........... eyJhbGci IBM Maximo Application Suite Applications IoT ...................... Skip Installation - Monitor ............... Skip Installation Manage ................... Skip Installation - Predict ............... Skip Installation Assist ................... Skip Installation MVI ...................... Skip Installation IBM Suite License Service Catalog Source ............ ibm-operator-catalog License ID ................ 10005ae0addd License File .............. /workspace/entitlement/license.dat IBM Entitled Registry ..... cp.icr.io/cp IBM Open Registry ......... icr.io/cpopen Entitlement Username ...... cp Entitlement Key ........... eyJhbGci IBM User Data Services Contact Email ............. matthieulrx@nl.ibm.com First Name ................ Matthieu Last Name ................. Leroux Storage Class Configuration Storage Class Provider ... custom ReadWriteOnce ............ rook-ceph-block ReadWriteMany ............ rook-cephfs Proceed with these settings [y/N] y Launch Installation Installation started successfully View progress: https://console-openshift-console.apps.siccing.cp.fyre.ibm.com/pipelines/ns/mas-ag-pipelines troubleshooting if the mirror command fails with permission error, make sure the volumes are mounted with :z option you may also need to allow access policy You can generate a local policy module to allow this access. Allow this access for now by executing: ausearch -c 'python3' --raw | audit2allow -M my-python3 semodule -X 300 -i my-python3.pp ====== issue: the pipeline start but fails almost straight away on pre-install-check, no logs are available, the corresponding pod no longer exists. rerun the pipeline and go to workload>pods you see the pod is created but in imagepullbackoff error, get the event before the pod is terminated: Failed to pull image \"quay.io/ibmmas/cli:13.13.0\": (Mirrors also failed: [ml-registry1.fyre.ibm.com:5000/ibmmas/cli:13.13.0: reading manifest 13.13.0 in ml-registry1.fyre.ibm.com:5000/ibmmas/cli: manifest unknown]): quay.io/ibmmas/cli:13.13.0: registry quay.io/ibmmas is blocked in /etc/containers/registries.conf or /root/.config/containers/registries.conf.d mas install command should detect that it is an airgap install and use digest instead. check the mas.log file in the mas cli container 2025-03-26 13:37:48,718 DEBUG >>> BaseApp.createTektonFileWithDigest 2025-03-26 13:37:48,719 DEBUG We have already generated /opt/app-root/lib64/python3.9/site-packages/mas/cli/templates/ibm-mas-tekton-with-digest.yaml 2025-03-26 13:37:48,719 DEBUG <<< BaseApp.createTektonFileWithDigest apply the yaml file: oc project mas-test-pipelines oc apply -f /opt/app-root/lib64/python3.9/site-packages/mas/cli/templates/ibm-mas-tekton-with-digest.yaml rerun the pipeline PodPtest-install-250326-1339-f0og95-pre-install-check-pod NamespaceNSmas-test-pipelines Mar 26, 2025, 2:53 PM Generated from kubelet on worker0.ml-ag.cp.fyre.ibm.com Failed to pull image \"quay.io/ibmmas/cli@sha256:9f6c745235d7da2eb56f5b193927789f2b3c433d1fcbbabaeed5e28584ee871e\": (Mirrors also failed: [ml-registry1.fyre.ibm.com:5000/ibmmas/cli@sha256:9f6c745235d7da2eb56f5b193927789f2b3c433d1fcbbabaeed5e28584ee871e: reading manifest sha256:9f6c745235d7da2eb56f5b193927789f2b3c433d1fcbbabaeed5e28584ee871e in ml-registry1.fyre.ibm.com:5000/ibmmas/cli: manifest unknown]): quay.io/ibmmas/cli@sha256:9f6c745235d7da2eb56f5b193927789f2b3c433d1fcbbabaeed5e28584ee871e: registry quay.io/ibmmas is blocked in /etc/containers/registries.conf or /root/.config/containers/registries.conf.d add the image to the registry: skopeo copy docker://quay.io/ibmmas/cli@sha256:9f6c745235d7da2eb56f5b193927789f2b3c433d1fcbbabaeed5e28584ee871e docker://ml-registry1.fyre.ibm.com:5000/ibmmas/cli@sha256:9f6c745235d7da2eb56f5b193927789f2b3c433d1fcbbabaeed5e28584ee871e gives error about invalid manifest instead, skopeo copy docker://quay.io/ibmmas/cli13.13.0 docker://ml-registry1.fyre.ibm.com:5000/ibmmas/cli:13.13.0 then get the digest: cat /images/data/docker/registry/v2/repositories/ibmmas/cli/_manifests/tags/13.13.0/current/link sha256:8ba9cf2e0f2533530d74f9359ad06c97083a4540093f17c021493bdcf897225d replace the reference in /opt/app-root/lib64/python3.9/site-packages/mas/cli/templates/ibm-mas-tekton-with-digest.yaml vi /opt/app-root/lib64/python3.9/site-packages/mas/cli/templates/ibm-mas-tekton-with-digest.yaml use: :%s/9f6c745235d7da2eb56f5b193927789f2b3c433d1fcbbabaeed5e28584ee871e/8ba9cf2e0f2533530d74f9359ad06c97083a4540093f17c021493bdcf897225d to replace all occurence. then apply the file again oc project mas-test-pipelines oc apply -f /opt/app-root/lib64/python3.9/site-packages/mas/cli/templates/ibm-mas-tekton-with-digest.yaml Troubleshooting References","title":"Installation"},{"location":"airgap/50-airgap_masinstall/#mas-install-in-airgap-environment","text":"mascli$ mas install IBM Maximo Application Suite Installer Powered by https://github.com/ibm-mas/ansible-devops/ and https://tekton.dev/ Current Limitations 1. Support for airgap installation is limited to Core with IoT, Manage, Optimizer at present Set Target OpenShift Cluster Connected to OCP cluster: https://console-openshift-console.apps.siccing.cp.fyre.ibm.com Proceed with this cluster? [Y/n] y Install OpenShift Pipelines Operator OpenShift Pipelines Operator is installed and ready Configure Installation MAS Instance ID > ag MAS Workspace ID > agws MAS Workspace Display Name > airgap workspace MAS Version: April 14 2023 Update 8.10.0 8.9.4 March 14 2023 Update 8.9.3 February 17 2023 Update 8.9.2 January 11 2023 Update 8.9.1 Select Catalog Source > 1 3.1. License Terms For information about your license, see https://ibm.biz/MAS810-License To continue with the installation, you must accept the license terms. Do you accept the license terms? [y/N] y Configure Operation Mode Maximo Application Suite can be installed in a non-production mode for internal development and testing, this setting cannot be changed after installation: All applications, add-ons, and solutions have 0 (zero) installation AppPoints in non-production installations. These specifications are also visible in the metrics that are shared with IBM\u00ae and on the product UI. Use non-production mode? [y/N] y Configure Domain & Certificate Management Configure Custom Domain [y/N] n Application Selection Install IoT [y/N] n Install Manage [y/N] n Install Optimizer [y/N] n Install Visual Inspection [y/N] Configure Db2 The installer can setup one or more IBM Db2 instances in your OpenShift cluster for the use of applications that require a JDBC datasource (IoT, Manage, Monitor, & Predict) or you may choose to configure MAS to use an existing database. No applications have been selected that require a Db2 installation Additional Configuration Additional resource definitions can be applied to the OpenShift Cluster during the MAS configuration step. The primary purpose of this is to apply configuration for Maximo Application Suite itself, but you can use this to deploy ANY additional resource into your cluster. Use additional configurations? [y/N] n Configure Storage Class Usage Maximo Application Suite and it's dependencies require storage classes that support ReadWriteOnce (RWO) and ReadWriteMany (RWX) access modes: ReadWriteOnce volumes can be mounted as read-write by multiple pods on a single node. ReadWriteMany volumes can be mounted as read-write by multiple pods across many nodes. Select the ReadWriteOnce and ReadWriteMany storage classes to use from the list below: - rook-ceph-block - rook-cephfs Enter 'none' for the ReadWriteMany storage class if you do not have a suitable class available in the cluster, however this will limit what can be installed ReadWriteOnce (RWO) storage class > rook-ceph-block ReadWriteMany (RWX) storage class > rook-cephfs Advanced Settings Configure Advanced Settings (optional)? [y/N] n Configure IBM Container Registry IBM Entitlement Key > * * * * * * * * * * * * * * * * * * * * * * * * * * Configure Product License License ID > 10005ae0addd License File > /images/license.dat Configure UDS UDS Contact Email > matthieulrx@nl.ibm.com UDS Contact First Name > Matthieu UDS Contact Last Name > Leroux Prepare Installation If you are using using storage classes that utilize 'WaitForFirstConsumer' binding mode choose 'No' at the prompt below Wait for PVCs to bind? [Y/n] n Preparing namespace 'mas-ag-pipelines' ...Override image tag '4.1.3' with digest? [Y/n] y Using image digest sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 Namespace 'mas-ag-pipelines' is ready Installed Task Definitions mas-devops-appconnect quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-cert-manager quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-cluster-monitoring quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-common-services quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-cos quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-cp4d quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-cp4d-service quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-db2 quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-gencfg-workspace quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-ibm-catalogs quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-kafka quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-mongodb quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-must-gather quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-nvidia-gpu quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-sls quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-suite-app-config quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-suite-app-install quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-suite-app-upgrade quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-suite-config quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-suite-db2-setup-for-manage quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-suite-dns quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-suite-install quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-suite-uninstall quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-suite-upgrade quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-suite-verify quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 mas-devops-uds quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 Installed Pipeline Definitions NAME AGE mas-db2 1s mas-install 1s mas-uninstall 1s mas-update 1s mas-upgrade 1s quay.io/ibmmas/cli@sha256:c9c1acc54488c755effa627a0ca9e26db5652ec009c226e6aad421b63d556010 is available from the target OCP cluster Review Settings IBM Maximo Application Suite Instance ID ............... ag Workspace ID .............. agws Workspace Name ............ airgap workspace Operation Mode ............ Non-production Catalog Source ............ ibm-operator-catalog Subscription Channel ...... 8.10.x IBM Entitled Registry ..... cp.icr.io/cp IBM Open Registry ......... icr.io/cpopen Entitlement Username ...... cp Entitlement Key ........... eyJhbGci IBM Maximo Application Suite Applications IoT ...................... Skip Installation - Monitor ............... Skip Installation Manage ................... Skip Installation - Predict ............... Skip Installation Assist ................... Skip Installation MVI ...................... Skip Installation IBM Suite License Service Catalog Source ............ ibm-operator-catalog License ID ................ 10005ae0addd License File .............. /workspace/entitlement/license.dat IBM Entitled Registry ..... cp.icr.io/cp IBM Open Registry ......... icr.io/cpopen Entitlement Username ...... cp Entitlement Key ........... eyJhbGci IBM User Data Services Contact Email ............. matthieulrx@nl.ibm.com First Name ................ Matthieu Last Name ................. Leroux Storage Class Configuration Storage Class Provider ... custom ReadWriteOnce ............ rook-ceph-block ReadWriteMany ............ rook-cephfs Proceed with these settings [y/N] y Launch Installation Installation started successfully View progress: https://console-openshift-console.apps.siccing.cp.fyre.ibm.com/pipelines/ns/mas-ag-pipelines troubleshooting if the mirror command fails with permission error, make sure the volumes are mounted with :z option you may also need to allow access policy You can generate a local policy module to allow this access. Allow this access for now by executing:","title":"mas install in airgap environment"},{"location":"airgap/50-airgap_masinstall/#ausearch-c-python3-raw-audit2allow-m-my-python3","text":"","title":"ausearch -c 'python3' --raw | audit2allow -M my-python3"},{"location":"airgap/50-airgap_masinstall/#semodule-x-300-i-my-python3pp","text":"====== issue: the pipeline start but fails almost straight away on pre-install-check, no logs are available, the corresponding pod no longer exists. rerun the pipeline and go to workload>pods you see the pod is created but in imagepullbackoff error, get the event before the pod is terminated: Failed to pull image \"quay.io/ibmmas/cli:13.13.0\": (Mirrors also failed: [ml-registry1.fyre.ibm.com:5000/ibmmas/cli:13.13.0: reading manifest 13.13.0 in ml-registry1.fyre.ibm.com:5000/ibmmas/cli: manifest unknown]): quay.io/ibmmas/cli:13.13.0: registry quay.io/ibmmas is blocked in /etc/containers/registries.conf or /root/.config/containers/registries.conf.d mas install command should detect that it is an airgap install and use digest instead. check the mas.log file in the mas cli container 2025-03-26 13:37:48,718 DEBUG >>> BaseApp.createTektonFileWithDigest 2025-03-26 13:37:48,719 DEBUG We have already generated /opt/app-root/lib64/python3.9/site-packages/mas/cli/templates/ibm-mas-tekton-with-digest.yaml 2025-03-26 13:37:48,719 DEBUG <<< BaseApp.createTektonFileWithDigest apply the yaml file: oc project mas-test-pipelines oc apply -f /opt/app-root/lib64/python3.9/site-packages/mas/cli/templates/ibm-mas-tekton-with-digest.yaml rerun the pipeline PodPtest-install-250326-1339-f0og95-pre-install-check-pod NamespaceNSmas-test-pipelines Mar 26, 2025, 2:53 PM Generated from kubelet on worker0.ml-ag.cp.fyre.ibm.com Failed to pull image \"quay.io/ibmmas/cli@sha256:9f6c745235d7da2eb56f5b193927789f2b3c433d1fcbbabaeed5e28584ee871e\": (Mirrors also failed: [ml-registry1.fyre.ibm.com:5000/ibmmas/cli@sha256:9f6c745235d7da2eb56f5b193927789f2b3c433d1fcbbabaeed5e28584ee871e: reading manifest sha256:9f6c745235d7da2eb56f5b193927789f2b3c433d1fcbbabaeed5e28584ee871e in ml-registry1.fyre.ibm.com:5000/ibmmas/cli: manifest unknown]): quay.io/ibmmas/cli@sha256:9f6c745235d7da2eb56f5b193927789f2b3c433d1fcbbabaeed5e28584ee871e: registry quay.io/ibmmas is blocked in /etc/containers/registries.conf or /root/.config/containers/registries.conf.d add the image to the registry: skopeo copy docker://quay.io/ibmmas/cli@sha256:9f6c745235d7da2eb56f5b193927789f2b3c433d1fcbbabaeed5e28584ee871e docker://ml-registry1.fyre.ibm.com:5000/ibmmas/cli@sha256:9f6c745235d7da2eb56f5b193927789f2b3c433d1fcbbabaeed5e28584ee871e gives error about invalid manifest instead, skopeo copy docker://quay.io/ibmmas/cli13.13.0 docker://ml-registry1.fyre.ibm.com:5000/ibmmas/cli:13.13.0 then get the digest: cat /images/data/docker/registry/v2/repositories/ibmmas/cli/_manifests/tags/13.13.0/current/link sha256:8ba9cf2e0f2533530d74f9359ad06c97083a4540093f17c021493bdcf897225d replace the reference in /opt/app-root/lib64/python3.9/site-packages/mas/cli/templates/ibm-mas-tekton-with-digest.yaml vi /opt/app-root/lib64/python3.9/site-packages/mas/cli/templates/ibm-mas-tekton-with-digest.yaml use: :%s/9f6c745235d7da2eb56f5b193927789f2b3c433d1fcbbabaeed5e28584ee871e/8ba9cf2e0f2533530d74f9359ad06c97083a4540093f17c021493bdcf897225d to replace all occurence. then apply the file again oc project mas-test-pipelines oc apply -f /opt/app-root/lib64/python3.9/site-packages/mas/cli/templates/ibm-mas-tekton-with-digest.yaml","title":"semodule -X 300 -i my-python3.pp"},{"location":"airgap/50-airgap_masinstall/#troubleshooting","text":"","title":"Troubleshooting"},{"location":"airgap/50-airgap_masinstall/#references","text":"","title":"References"},{"location":"airgap/60-airgap_listofissues/","text":"troubleshooting - issues - steps install failed to install pipeline operator: openshift was then missing some images from quay.io registry.redhat.io registry.connect.redhat.com workaround for getting mas to install: vi /opt/app-root/lib/python3.9/site-packages/ansible_collections/ibm/mas_devops/roles/ocp_simulate_disconnected_network/defaults/main.yml remove the 3 registries. install fail to get cli image: Failed to validate quay.io/ibmmas/cli@sha256:ab4a5c6da4bedd176de448be90c871b5228dc09d39b2eacf358ba90a9cf712c4 in the target OCP cluster oc image mirror quay.io/ibmmas/cli:7.10.1 ibmmas/cli:7.10.1 -a /images/config.json / ibmmas/cli blobs: quay.io/ibmmas/cli sha256:224dcd93401e12aad5b726f4a1d4cfc303345fcbd140b9648476ec7b781754ef 105B quay.io/ibmmas/cli sha256:b638dd0c3134925e23eeda5e61508edca9d6751d156a2fd53539f44a9b3ddd99 407B quay.io/ibmmas/cli sha256:c6327845777b7b00c5e0e2b403148c36d58c3e0f58fd28e061e37e5776e23be3 422B quay.io/ibmmas/cli sha256:464c5bc0faba68c4f860d1a5796dce46bd9b14ffe27d8d5906d10389838079b0 1.645KiB quay.io/ibmmas/cli sha256:bbc6a74ba9f44b813a64a43693fab5d05cf499cf5393e1a5253f04cd590aec52 3.745KiB quay.io/ibmmas/cli sha256:706de80aa95d67306da2318997b2ded2a46fbf7c0f986b3dd9d80f365364ebdf 6.384KiB quay.io/ibmmas/cli sha256:f22cf6e6f85d06a49194d0a722483dccf433790225a660c3298acd5dd0989fd3 9.438KiB quay.io/ibmmas/cli sha256:31ee7033ac94efd92556cf57fff7c899ad626f561ab62a45de5f12524fae25bd 9.445KiB quay.io/ibmmas/cli sha256:90de7fdad9f9dd4eaa775bd2bf841865b51b1e9bc03203f30c7375db21930c0c 29.62KiB quay.io/ibmmas/cli sha256:11814f610b240c5787f6658b1c9fa6a30aed7cd87d863aeceb11fd5237a16a85 112.3KiB quay.io/ibmmas/cli sha256:c620558b85ce9141c2e913643de5072e8f084e34b95b8aa3379e58c8441cf5aa 1.646MiB quay.io/ibmmas/cli sha256:da8e579350ebd10965fb2b4cb51781df942405938026bfef9cbd9597a78bcd29 12.59MiB quay.io/ibmmas/cli sha256:1f76d245924ab2654041b6b01fb85c14afd06654e06704081872e8b5a1598ff0 17.72MiB quay.io/ibmmas/cli sha256:8c784caf9b7fa4acf536fdebdbffb64c09accd97f3b9c6c280791d5807df608b 73.68MiB quay.io/ibmmas/cli sha256:94d0035314a138da8f92422fcfa9553d7c1f626322cedc78ddd8e545f4e60f4e 75.29MiB quay.io/ibmmas/cli sha256:e59f6edab1ac3b4e3c67d9d58e64023b04af42c726feeefa7ceb058e72dac124 76.6MiB quay.io/ibmmas/cli sha256:be73b5c2021d572dd7ef2134b85490f54590881904f62d61e8237035bf1646ea 144.7MiB quay.io/ibmmas/cli sha256:2926ced57f19b2e8b284e4ab12517922ec92251cda92cb83b98fb9c766e7b2f9 416MiB manifests: sha256:ab4a5c6da4bedd176de448be90c871b5228dc09d39b2eacf358ba90a9cf712c4 -> 7.10.1 stats: shared=0 unique=18 size=818.4MiB ratio=1.00 phase 0: ibmmas/cli blobs=18 mounts=0 manifests=1 shared=0 [...] error: unable to push quay.io/ibmmas/cli: failed to upload blob sha256:464c5bc0faba68c4f860d1a5796dce46bd9b14ffe27d8d5906d10389838079b0: Get \"https://image-registry1.fyre.ibm.com:5000/v2/\": tls: failed to verify certificate: x509: certificate signed by unknown authority had to add the certificate to the trusted certificate on the cli image where running the oc image mirror command from: cp /images/certs/domain.crt /etc/pki/ca-trust/source/anchors/ update-ca-trust it then completed: [...] uploading: image-registry1.fyre.ibm.com:5000/ibmmas/cli sha256:8c784caf9b7fa4acf536fdebdbffb64c09accd97f3b9c6c280791d5807df608b 73.68MiB uploading: image-registry1.fyre.ibm.com:5000/ibmmas/cli sha256:da8e579350ebd10965fb2b4cb51781df942405938026bfef9cbd9597a78bcd29 12.59MiB uploading: image-registry1.fyre.ibm.com:5000/ibmmas/cli sha256:c620558b85ce9141c2e913643de5072e8f084e34b95b8aa3379e58c8441cf5aa 1.646MiB sha256:ab4a5c6da4bedd176de448be90c871b5228dc09d39b2eacf358ba90a9cf712c4 image-registry1.fyre.ibm.com:5000/ibmmas/cli:7.10.1 info: Mirroring completed in 11.1s (77.26MB/s) ========= ========= image pullbackoff error Failed to pull image \"quay.io/ibmmas/cli:13.13.0\": (Mirrors also failed: [ml-registry1.fyre.ibm.com:5000/ibmmas/cli:13.13.0: reading manifest 13.13.0 in ml-registry1.fyre.ibm.com:5000/ibmmas/cli: manifest unknown]): quay.io/ibmmas/cli:13.13.0: registry quay.io/ibmmas is blocked in /etc/containers/registries.conf or /root/.config/containers/registries.conf.d check the image is in the registry /images/data/docker/registry/v2/repositories/ibmmas/cli/_manifests/tags/13.13.0 manually copy it using skopeo: skopeo copy docker://quay.io/ibmmas/cli:13.13.0 docker://ml-registry1.fyre.ibm.com:5000/ibmmas/cli:13.13.0 Failed to pull image \"quay.io/ibmmas/mongo@sha256:34341de709b1a70f5e0339ecb1ad2aa2152ecf88e5ca825e2a764da69bbd0269\": registry quay.io/ibmmas is blocked in /etc/containers/registries.conf or /root/.config/containers/registries.conf.d check you have an entry in idms if it is pulling using a tag, you need to have an entry in itms","title":"Issues"},{"location":"airgap/60-airgap_listofissues/#troubleshooting-issues-steps","text":"install failed to install pipeline operator: openshift was then missing some images from quay.io registry.redhat.io registry.connect.redhat.com workaround for getting mas to install: vi /opt/app-root/lib/python3.9/site-packages/ansible_collections/ibm/mas_devops/roles/ocp_simulate_disconnected_network/defaults/main.yml remove the 3 registries. install fail to get cli image: Failed to validate quay.io/ibmmas/cli@sha256:ab4a5c6da4bedd176de448be90c871b5228dc09d39b2eacf358ba90a9cf712c4 in the target OCP cluster oc image mirror quay.io/ibmmas/cli:7.10.1 ibmmas/cli:7.10.1 -a /images/config.json / ibmmas/cli blobs: quay.io/ibmmas/cli sha256:224dcd93401e12aad5b726f4a1d4cfc303345fcbd140b9648476ec7b781754ef 105B quay.io/ibmmas/cli sha256:b638dd0c3134925e23eeda5e61508edca9d6751d156a2fd53539f44a9b3ddd99 407B quay.io/ibmmas/cli sha256:c6327845777b7b00c5e0e2b403148c36d58c3e0f58fd28e061e37e5776e23be3 422B quay.io/ibmmas/cli sha256:464c5bc0faba68c4f860d1a5796dce46bd9b14ffe27d8d5906d10389838079b0 1.645KiB quay.io/ibmmas/cli sha256:bbc6a74ba9f44b813a64a43693fab5d05cf499cf5393e1a5253f04cd590aec52 3.745KiB quay.io/ibmmas/cli sha256:706de80aa95d67306da2318997b2ded2a46fbf7c0f986b3dd9d80f365364ebdf 6.384KiB quay.io/ibmmas/cli sha256:f22cf6e6f85d06a49194d0a722483dccf433790225a660c3298acd5dd0989fd3 9.438KiB quay.io/ibmmas/cli sha256:31ee7033ac94efd92556cf57fff7c899ad626f561ab62a45de5f12524fae25bd 9.445KiB quay.io/ibmmas/cli sha256:90de7fdad9f9dd4eaa775bd2bf841865b51b1e9bc03203f30c7375db21930c0c 29.62KiB quay.io/ibmmas/cli sha256:11814f610b240c5787f6658b1c9fa6a30aed7cd87d863aeceb11fd5237a16a85 112.3KiB quay.io/ibmmas/cli sha256:c620558b85ce9141c2e913643de5072e8f084e34b95b8aa3379e58c8441cf5aa 1.646MiB quay.io/ibmmas/cli sha256:da8e579350ebd10965fb2b4cb51781df942405938026bfef9cbd9597a78bcd29 12.59MiB quay.io/ibmmas/cli sha256:1f76d245924ab2654041b6b01fb85c14afd06654e06704081872e8b5a1598ff0 17.72MiB quay.io/ibmmas/cli sha256:8c784caf9b7fa4acf536fdebdbffb64c09accd97f3b9c6c280791d5807df608b 73.68MiB quay.io/ibmmas/cli sha256:94d0035314a138da8f92422fcfa9553d7c1f626322cedc78ddd8e545f4e60f4e 75.29MiB quay.io/ibmmas/cli sha256:e59f6edab1ac3b4e3c67d9d58e64023b04af42c726feeefa7ceb058e72dac124 76.6MiB quay.io/ibmmas/cli sha256:be73b5c2021d572dd7ef2134b85490f54590881904f62d61e8237035bf1646ea 144.7MiB quay.io/ibmmas/cli sha256:2926ced57f19b2e8b284e4ab12517922ec92251cda92cb83b98fb9c766e7b2f9 416MiB manifests: sha256:ab4a5c6da4bedd176de448be90c871b5228dc09d39b2eacf358ba90a9cf712c4 -> 7.10.1 stats: shared=0 unique=18 size=818.4MiB ratio=1.00 phase 0: ibmmas/cli blobs=18 mounts=0 manifests=1 shared=0 [...] error: unable to push quay.io/ibmmas/cli: failed to upload blob sha256:464c5bc0faba68c4f860d1a5796dce46bd9b14ffe27d8d5906d10389838079b0: Get \"https://image-registry1.fyre.ibm.com:5000/v2/\": tls: failed to verify certificate: x509: certificate signed by unknown authority had to add the certificate to the trusted certificate on the cli image where running the oc image mirror command from: cp /images/certs/domain.crt /etc/pki/ca-trust/source/anchors/ update-ca-trust it then completed: [...] uploading: image-registry1.fyre.ibm.com:5000/ibmmas/cli sha256:8c784caf9b7fa4acf536fdebdbffb64c09accd97f3b9c6c280791d5807df608b 73.68MiB uploading: image-registry1.fyre.ibm.com:5000/ibmmas/cli sha256:da8e579350ebd10965fb2b4cb51781df942405938026bfef9cbd9597a78bcd29 12.59MiB uploading: image-registry1.fyre.ibm.com:5000/ibmmas/cli sha256:c620558b85ce9141c2e913643de5072e8f084e34b95b8aa3379e58c8441cf5aa 1.646MiB sha256:ab4a5c6da4bedd176de448be90c871b5228dc09d39b2eacf358ba90a9cf712c4 image-registry1.fyre.ibm.com:5000/ibmmas/cli:7.10.1 info: Mirroring completed in 11.1s (77.26MB/s) ========= ========= image pullbackoff error Failed to pull image \"quay.io/ibmmas/cli:13.13.0\": (Mirrors also failed: [ml-registry1.fyre.ibm.com:5000/ibmmas/cli:13.13.0: reading manifest 13.13.0 in ml-registry1.fyre.ibm.com:5000/ibmmas/cli: manifest unknown]): quay.io/ibmmas/cli:13.13.0: registry quay.io/ibmmas is blocked in /etc/containers/registries.conf or /root/.config/containers/registries.conf.d check the image is in the registry /images/data/docker/registry/v2/repositories/ibmmas/cli/_manifests/tags/13.13.0 manually copy it using skopeo: skopeo copy docker://quay.io/ibmmas/cli:13.13.0 docker://ml-registry1.fyre.ibm.com:5000/ibmmas/cli:13.13.0 Failed to pull image \"quay.io/ibmmas/mongo@sha256:34341de709b1a70f5e0339ecb1ad2aa2152ecf88e5ca825e2a764da69bbd0269\": registry quay.io/ibmmas is blocked in /etc/containers/registries.conf or /root/.config/containers/registries.conf.d check you have an entry in idms if it is pulling using a tag, you need to have an entry in itms","title":"troubleshooting - issues - steps"}]}